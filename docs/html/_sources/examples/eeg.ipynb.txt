{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# Reading EEG Data from events\n",
    "\n",
    "Each events array has an `eegfile` field, which points to the directory that contains the associated \n",
    "EEG files. To read this data, you use the EEGReader class. \n",
    "\n",
    "Two other important classes for loading EEG data are the TalReader class, which loads information about \n",
    "the electrodes in ECoG subjects, and the MonopolarToBipolarMapper, which performs a bipolar rereferencing \n",
    "on ECoG data.\n",
    "\n",
    "This notebook will go over loading EEG data from the three different CML formats."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "from ptsa.data.readers import BaseEventReader,EEGReader,CMLEventReader\n",
    "from ptsa.data.readers import TalReader\n",
    "from ptsa.data.filters import MonopolarToBipolarMapper\n",
    "from matplotlib import pyplot as plt\n",
    "import numpy as np\n",
    "rhino_root='/Volumes/rhino_root'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. pyFR data (and old RAM data)\n",
    "First, we load the events, which are found on rhino in `/data/events/pyFR`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "events = BaseEventReader(filename=rhino_root+'/data/events/pyFR/BW001_events.mat',use_reref_eeg=False).read()\n",
    "words = events[events.type=='WORD']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Next, we use the TalReader class to get information about the subject's electrodes. \n",
    "\n",
    "Like the other readers, the TalReader class has a `read()` method that will return a record array;\n",
    "this one contains information about the location of each electrode. \n",
    "However, we're really only interested in two things: each electrode's number, and which electrodes \n",
    "are adjacent to each other.\n",
    "Therefore, TalReader has two convenience methods, `get_monopolar_channels` and `get_bipolar_pairs`, \n",
    "specifically for this purpose."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING: Could not retrieve the following objects:\n",
      "bpTalStruct\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array(['001', '002', '003', '004', '005', '006', '007', '008', '009',\n",
       "       '010', '011', '012', '013', '014', '015', '016', '017', '018',\n",
       "       '019', '020', '021', '022', '023', '024', '025', '026', '027',\n",
       "       '028', '029', '030', '031', '032', '033', '034', '035', '036',\n",
       "       '037', '038', '039', '040', '041', '042', '043', '044', '045',\n",
       "       '046', '047', '048', '049', '050', '051', '052', '053', '054',\n",
       "       '055', '056', '057', '058', '059', '060', '061', '062', '063', '064'], \n",
       "      dtype='|S3')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tal_reader = TalReader(filename=rhino_root+'/data/eeg/BW001/tal/BW001_talLocs_database_bipol.mat')\n",
    "channels = tal_reader.get_monopolar_channels()\n",
    "channels"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note the format of the channel array: a numpy array of 3-character strings.\n",
    " These are literally the suffixes of binary files, telling the EEGReader which files to load.\n",
    "\n",
    "To load the EEG data into memory, we give the EEGReader the events and channels we want to load,\n",
    "and the time around each event that we are interested in.\n",
    "There is also a `buffer_time` parameter, that will add a buffer period to the timeseries we load at the beginning and the end.\n",
    "If you add a buffer period, you should remove it afterwards with `remove_buffer()`. \n",
    "\n",
    "All of these use time in seconds as their unit."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/leond/miniconda2/envs/ptsa/lib/python2.7/site-packages/ptsa/data/readers/ParamsReader.py:112: RuntimeWarning: Did not find \"gain\" in the params.txt file. Assuming gain=1.0\n",
      "  warnings.warn('Did not find \"gain\" in the params.txt file. Assuming gain=1.0', RuntimeWarning)\n",
      "/Users/leond/miniconda2/envs/ptsa/lib/python2.7/site-packages/ptsa/data/readers/BaseRawReader.py:66: RuntimeWarning: Could not find data format definition in the params file. Will read the file assuming data format is int16\n",
      "  ' data format is int16', RuntimeWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<xarray.TimeSeriesX (channels: 64, events: 444, time: 200)>\n",
      "array([[[ -93.,  -96.,  -87., ...,   -4.,   25.,   38.],\n",
      "        [-313., -296., -273., ...,  -99., -106.,  -90.],\n",
      "        [  86.,   76.,   91., ...,  218.,  214.,  192.],\n",
      "        ..., \n",
      "        [-291., -312., -287., ...,  -42.,  -24.,   -9.],\n",
      "        [ -90.,  -89.,  -84., ...,   42.,   70.,   53.],\n",
      "        [-123., -144., -135., ...,   -9.,  -27.,  -27.]],\n",
      "\n",
      "       [[  -2.,   -3.,   10., ...,  -21.,   -8.,   28.],\n",
      "        [-114., -107.,  -90., ...,  -40.,  -99., -158.],\n",
      "        [ 140.,  131.,  212., ...,  -28.,  -18.,  -23.],\n",
      "        ..., \n",
      "        [-160., -168., -129., ..., -130., -132., -136.],\n",
      "        [  75.,   80.,   99., ...,   14.,   48.,   18.],\n",
      "        [-186., -215., -203., ...,   23.,   11.,    7.]],\n",
      "\n",
      "       [[  45.,   38.,   38., ...,   69.,  135.,  210.],\n",
      "        [-261., -243., -218., ..., -125.,    2.,  129.],\n",
      "        [ 134.,  163.,  261., ...,   -5.,   -8.,  -15.],\n",
      "        ..., \n",
      "        [-247., -261., -226., ..., -127., -126., -110.],\n",
      "        [  74.,   66.,   48., ...,  -71., -146., -237.],\n",
      "        [ -59.,  -80.,  -87., ...,   54.,   52.,   41.]],\n",
      "\n",
      "       ..., \n",
      "       [[ -38.,  -54.,  -61., ...,   25.,   28.,   54.],\n",
      "        [ -73.,  -27.,   24., ...,    5.,  -27.,   10.],\n",
      "        [  29.,   23.,   29., ...,   23.,   18.,   -2.],\n",
      "        ..., \n",
      "        [ -39.,  -39.,  -14., ...,  -88.,  -81.,  -59.],\n",
      "        [  26.,   11.,    7., ...,   69.,  100.,   47.],\n",
      "        [ -38.,  -91., -127., ...,  115.,   91.,   91.]],\n",
      "\n",
      "       [[   0.,    8.,    8., ...,   62.,   91.,   73.],\n",
      "        [ -46.,  -51.,  -13., ...,   68.,   77.,  102.],\n",
      "        [  -9.,   13.,   35., ...,  -25.,  -26.,  -42.],\n",
      "        ..., \n",
      "        [ -48.,  -61.,  -42., ...,  -80.,  -88.,  -82.],\n",
      "        [ -25.,  -14.,    2., ...,   47.,   79.,   70.],\n",
      "        [ -30.,  -64., -104., ...,   45.,   28.,   13.]],\n",
      "\n",
      "       [[  -6.,  -30.,  -48., ...,   29.,   21.,    2.],\n",
      "        [ -29.,  -15.,   11., ...,   86.,   79.,   88.],\n",
      "        [ -53.,  -60.,  -54., ...,  -12.,   -7.,  -11.],\n",
      "        ..., \n",
      "        [   9.,  -27.,   14., ...,  -13.,  -16.,   11.],\n",
      "        [ -64.,  -55.,  -31., ...,   12.,   45.,   42.],\n",
      "        [  67.,   23.,  -13., ...,   47.,   13.,   -3.]]])\n",
      "Coordinates:\n",
      "  * channels    (channels) |S3 '001' '002' '003' '004' '005' '006' '007' ...\n",
      "    samplerate  float64 200.0\n",
      "  * events      (events) (numpy.record, [('subject', 'S256'), ('session', '<i8'), ('list', '<i8'), ('type', 'S256'), ('item', 'S256'), ('itemno', '<i8'), ('recalled', '<i8'), ('mstime', '<i8'), ('msoffset', '<i8'), ('rectime', '<i8'), ('intrusion', '<i8'), ('eegfile', 'S256'), ('eegoffset', '<i8'), ('serialpos', '<i8')]) ('BW001', 1, -999, 'SESS_START', 'X', -999, -999, 683395115, -999, -999, -999, '/Volumes/rhino_root/data/eeg/BW001/eeg.noreref/BW001_24Jul02_0001', 2841, 0) ...\n",
      "  * time        (time) float64 0.0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 ...\n",
      "Attributes:\n",
      "    samplerate: 200.0\n",
      "    gain: 1.0\n"
     ]
    }
   ],
   "source": [
    "eeg = EEGReader(events=events,channels=channels,start_time=0.0,end_time=1.0).read()\n",
    "print(eeg)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The EEGReader returns a TimeSeriesX object, which is a subclass of xarray.DataArray.\n",
    "The DataArray class provides an interface for multi-dimensional arrays with labelled axes; the TimeSeriesX object adds some additional convenience methods.\n",
    "\n",
    "As an example of one might use a DataArray, let's plot the average voltage across all channels and events.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1162bfad0>]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXQAAAD8CAYAAABn919SAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJztvXmYY2d15/99te9bSbV3dVXv3e7FSzfeDRjHGGMwCWF+\nQFjskHjIb5JAQgJkkiHDb/IEJpMMARIGHOxAgn82wRjMavCCN+xuuzf3vi/VtasW7bv0zh93KUml\nraSr0pXqfJ7Hj6urbknvLUnfe+55z/kexjkHQRAE0f5oWr0AgiAIQhlI0AmCIDoEEnSCIIgOgQSd\nIAiiQyBBJwiC6BBI0AmCIDoEEnSCIIgOgQSdIAiiQyBBJwiC6BB0K/lkXq+XDw8Pr+RTEgRBtD0H\nDhyY5Zz7qh23ooI+PDyM/fv3r+RTEgRBtD2Mscu1HEcpF4IgiA6BBJ0gCKJDIEEnCILoEEjQCYIg\nOgQSdIIgiA6BBJ0gCKJDIEEnCILoEEjQyzC2EMPPj062ehkEQRA1Q4Jehq+/cB5/8MhBXPBHWr0U\ngiCImiBBL8PR8RAA4JF9oy1eCUEQRG2QoJcgnc3h5KQg6I8fGEMinW3xigiCIKpDgl6C8/4IUpkc\n3r9nDYLxNH56hHLpBEGoHxL0EhwT0y2/d+sIDDoNzkyHW7wigiCI6pCgl+DYeBAWgxYjXhscJh3C\nyUyrl0QQBFEVEvQSHBsPYlufA1oNg82oQyRBgk4QhPohQS8im+M4MRnC9gEnAMBm0iFCETpBEG0A\nCXoR89EUYqks1vmsAACbUYdwIt3iVREEQVSHBL2IQCwFAHBZDAAAu0mPMKVcCIJoA0jQi1iICdG4\nRxJ0I6VcCIJoD0jQi1iQI3Q9AMqhEwTRPpCgF7EQFQTdbRUidKnKhXPeymURBEFUhQS9CCnl4hYj\ndLtJj0yOI5HOtXJZBEEQVSFBLyIQS8Gg08Cs1wIQUi4AEE5SpQtBEOqGBL2IhVgKbosejDEAwqYo\nAGouIghC9VQVdMbYw4yxGcbYsbzv/S/G2CnG2BHG2A8YY67mLnPlWIil4RYrXAAhhw6ANkYJglA9\ntUTo3wJwV9H3ngawnXO+E8AZAH+h8LpaRiCWkitcAMAupVwoQicIQuVUFXTO+YsA5ou+90vOuaRw\newEMNmFtLWFJhE6CThBEm6BEDv13Afy83A8ZYw8wxvYzxvb7/X4Fnq65CBH6oqDbjUK0TikXgiDU\nTkOCzhj7SwAZAI+UO4Zz/iDnfDfnfLfP52vk6ZoO5xyBWFouWQQWI/QI+bkQBKFydPX+ImPsPgD3\nAHgb75Cum3Ayg0yO06YoQRBtSV2Czhi7C8CnAbyZcx5TdkmtIxAVovD8TVGDTgOjTkM5dIIgVE8t\nZYuPAngVwGbG2Bhj7GMA/gmAHcDTjLHDjLGvN3mdK4Lk45IfoQNCpQtNLSIIQu1UjdA55x8o8e2H\nmrCWliMLulVf8H2aWkQQRDtAnaJ5BGJSyqU4QtdTDp0gCNVDgp5HuZQLTS0iCKIdIEHPYyGWBmOA\n01yUcjHpaFOUIAjVQ4KeRzCWgsOkh1bDCr5PU4sIgmgHSNDzCMTTBSWLEnaaWkQQRBtAgp5HMJ5e\nkm4BxDF0NLWIIAiVQ4KeRyBWWtClqUXxdLYFqyIIgqgNEvQ8QvE0HCUE3SPOF52LpFZ6SQRBEDVD\ngp5HuZRLlyToURJ0giDUCwm6COccwXgarlKCbjMCAOajyZVeFkEQRM2QoIvEUllkcrxihD5LKReC\nIFQMCbpIIC50gpYUdBvl0AmCUD8k6CLBWHlBtxh0MOu1mItQyoUgCPVCgi4SlCL0Eo1FgBClz9Om\nKEEQKoYEXSRYIeUCCBujsyToBEGoGBJ0kVAVQfdaDZRyIQhC1ZCgiwTiQvRdTtA9Vkq5tBuZbA57\nL8y1ehkEsWKQoIsE42loNUweCl1Ml82IuUiK/FzaiB8cGsf7H9yLo2PBVi+FIFYEEnQRqUuUMVby\n516bAalsTlWzRYOxNP7iiSNYoDuHkrx+aR4AKEonVg0k6CLBeKZsugVQZy369w5cwaOvXcGrJFgl\nOTQaAADsuzjf4pUQxMpAgi4SLGPMJeGxqq/9/weHxgEAE4F4i1eiPoLxNM7ORKDTMLx+aR65HKXK\niM6HBF0kGEtVjtBV1v5/djqM4xMhAMBkMNHi1aiPw1eE6PzeqwcQjKdxZibc4hURRPMhQRcpZ8wl\n4RUNutSScvnh4XFomJDbnyJBX8LBywvQMOCB29YBAF6jtAuxCiBBFylnnSsheaKrJeXy9Ilp3LTe\ni829dkwEKeVSzKErAWzqsWNzrx0DLjMJOrEqqCrojLGHGWMzjLFjed/zMMaeZoydFf/vbu4ymwvn\nHKFE5U1Rg04Du0mnipRLMJ7GmekIrh/xoNdhpgi9BKenQtg+4AQAbO1z4Mw0pVyIzqeWCP1bAO4q\n+t5nATzLOd8I4Fnx321LJJlBtox1bj5Osx6hRLrp6wkl0khlcmV/fnB0AQBw3Vo3+l0mTIcSyGTL\nH7/ayOU45iIpdNuFNNn6bisuzkbpb0R0PFUFnXP+IoDi+9V7AXxb/PrbAN6j8LpWFKkD1FXGmEvC\nYdIjFG9+Hfq7vvoyvvb8ubI/P3BpAVoNw9VDLvQ6TchxwE+2BDLBeBqZHJf3PTb4bEhnOUbnYy1e\nGUE0l3pz6D2c80nx6ykAPeUOZIw9wBjbzxjb7/f763y65jIREFIWAy5zxeMcZl3TI/RMNofLczFc\nmo2WPebA5QVs63PAYtCh3ymsWToHApgVL25eMULf0G0DAJybibRsTQSxEjS8KcqFXviyRb6c8wc5\n57s557t9Pl+jT9cUxsU67v5qgm7SyyZezSKUEO4A5mOlnyedzeHwlQCuWytsW/Q6TQBAefQ8pLsV\nr9gMtl4SdD8JOtHZ1Cvo04yxPgAQ/z+j3JJWHqkxp89lqnicw6xHONHclMtCTEj/lGvnPzUZRjyd\nlQVditAnqdJFRtq49okpF4dJjx6HkSJ0ouOpV9B/BOCj4tcfBfCkMstpDROBOHx2I4w6bcXjViJC\nD0iCHist6OfFKHNrn0NYk1mYpkQpl0Vmw0KELg33BoS0y3kSdKLDqaVs8VEArwLYzBgbY4x9DMAX\nAfwGY+wsgDvEf7ct44F41XQLIIhnWKyIaRYL0bT4/9KCLqWHpHw/Ywx9LhOmQhShS8xFk9BqWEGj\n2AafDef9UXLLJDqa0l6xeXDOP1DmR29TeC0tYzwQx5Zee9XjHCZBICKJTNlRdY0iRebRVBbJTHbJ\nXcN4IA6P1QCzYfH7fU4Ttf/nMRtOoctqgEaz6Jy5oduGSDKDqVACfc7qF2+CaEdWfaco5xwTgbic\ni66EZN7VzEqXYF5KJ1BiY3QiEEd/Ua7fZTEU/N5qZzaSlEsWJa4ZEvYcvvJs+XJQgmh3Vr2gL8TS\nSKRzGHDXIOgm4YammeKZnzsvNSFpfCG+pLzSbtQh0uTN2nZiNpKUSxYltg848fE3r8ejr43iycPj\nLVoZQTSXVS/oEzWWLAIrE6Ev5EXlxRuj8t1EsaCbdE2vvmknZiMpeEXvnXz+7M5N2NJrx7dfubTy\ni2ohnHOyD14lrHpBH1so3GSshJRDb2a3aCCWgpT6lTZIJULxDKKp7JK12ox6xNNZam2HIF6lInQA\n0Gk12DnolDeWVwtfe/483vHll1q9DGIFWPWCvrwIXUi5NDVCj6axxmMBAMwXRehjAaF1fYmgi6mg\naDLbtHW1C5FkBslMTm4qKqbfZcZMOFnRK6fT2HthDqenw0ik6f3R6ZCgB+Iw6TVw11C1IqdcmphD\nD8TTGO6yCl8X5dClWvMlKRdxsHU4SRujUlNR8aaoRL/LDM5XV2et5DRJk606HxL0oLDJWG44dD42\ngw6MLbbnN4NATHAJtBl1SyL0cncTUoQeUdEA61Yh+7iUEXTp7ma1pF2C8TSmQ8LfZLWc82pm1Qv6\n+EJtTUUAoNEw2I26pkboC7EU3FYD3Fb9kuai8UAcBp1mSTrBJkboVOmS3yVaOuUiCfpqiVbP5Y3e\nWy3nvJppW0H/8jNncWw82PDjjAcSNW2ISjia6ImeSGeRSOfgsujhsRgKKl4AQdBL3U3YxQidKl0g\nW+T2Okr78khmZqslWj0zvWh3ME72EB1PWwp6Ip3Fl545g3/+VWNNIol0FrORZM0ROtBcT3SpTNFl\nNsBlMSwpWyzVVATkCTqlXPDyuVls6LYV+LjkY9Jr4bUZV020emY6DLNeix6HEeMLq+OcVzNtKehS\nyuOFM/6Gdu6ljbHlRejN80SXyhTdFj08VsOSxqKZUBI99qWCbjMuWhKsZhLpLF67OI9bN3orHjfg\nNq+aCP3cTAQbum0YdFtWzUVsNdOWgi51asZSWey9MFf349Tqg55PMx0XA3FpcpIBbouhoPWfc465\naLJkbnhxU3R1V7nsv7SAZCZXXdBdplUjbmemw9jYY0O/y0zDxFcBbS3oAPDMyemqx4cSaXz4oX34\nqx8eLfh+sXNhLTTTE10ScLdVD7dFL9ZUC3cgsZSQXy+VSrDotWCMIvSXzvqh1zJcP9JV8bh+pxCh\nd7rzolThsrHbjn6XCZOBBHWMdjhtLej9ThOeOTFT8YMZT2Xx0Ydfw0tnZ/HEwXGk87opJwJxMAb0\nOEvnW0vRzAg9P4fuFlvXJZGX0i9dJVraNRoGm0G36nPoL52dxXVr3bAaK5uI9rvMSKRzSzadOw0p\nZ762y4JBlxmpbE4u6yQ6k7YW9Ht29WMqlMCV+fK3ki+e9ePQaAD37OxDLJXFodGA/LOJQBw+W/XB\nFvk00xN9XmyKcVuFHDqwKPLV6qttptVt0BVJZnByKoQb1lWOzgHIRmydnnaZDgl7RD0Ok5xWXC17\nB6X4ws9P4pF9l1u9jKbSloIuRa23bRRmlB4ZD5Q9dkZ8U3/yjo3QMKEKQmI8EK/JZTEfyc8l3ISN\n0fFAHF7xAuMSO1elyHxOFPty9dWr3aDr6FgQnAO71riqHjsovuaX52KKPHcwnsY3X7qgOi+dKfG9\n3+skQf/F8Sl844ULeOJgZztttqWgSxH67mE3DDoNjoyVr0efCSehYcCI14Ydgy78Ok/QJwKJZW2I\nApAj57kyE4UaQagzNxU8j1T5MhddOlYtH5tRt6o7RY+MCRf1XYPVBX2d1wbGoNiM0R8cHMPf/PQk\n9l6YV+TxlGIymABjQLfdKL/PJ1dhLXookcbnnjwGALgyr8xFXK20raDbjTqY9Fps7XPIH+ZSzISS\n6LIZodUw3LrBi8NXAggn0uCcy406y8Enuvj5w8rnIvPvGDyW4pRL+Rw6ANhM+lWdQz8yFsSg2yxf\nCCthNmgx4DLjnF8ZQZcCilfOz1Y5cmWZDibgtRmh12rgMOmg07CmBCJq5++eOoWZcBJ3bO3GTDjZ\n0SZlbSnooXhaHgG3a9CJY+Ohsrv3M+EEukURvmWjF9kcxyvn5zAXTSGVyaHfWbqjsBzNEvTiyUku\nSdDzUi428SJWCmHIRWdv8lXijbFATdG5xIZum2IR+mExoHi1gRLaZjAZSqBPfH8zxuC2GuQh5KuF\n1y/N4zt7R3H/TSO4e0cfgM5OO7WloAfiaThF58MdA05EkhlcmI2WPHYmnJQF/bq1btiNOjx/egZv\nXBE+hOt8tmU9t8/WHEGfj6YKJicZdJoCg65yNegSqznlMhdJYmwhjp2Dzpp/Z4PPhgv+SMNlfMF4\nGhf8UdiNOhwZCzZlb6VepoMJ9ORZIHgsS5vVOp2/+elJDLjM+NSdm2Rb6rEO7phtS0EP5gn6TjEq\nO1pmY1QQdOFNrddqcOsmL547NYMnD0/AadbXVBWRj8uih17LMKOwoJeqiXdb9fIG8FwkVTbdAqzu\nKpcjoqfPzmVG6MlMruFoTfIT+tCNa5HNcbx+ST159Km8CB0Q3rul5tR2KplsDsfHg3j31f2wGnXy\nZngn59HbXtA3dNtg0mtwfDy05LhsjmMukkS3Y3Ej8a2buzEdSuKnRydx945eGHTL+xMwxuCzGRWP\n0KWa4fxN2vyIajaSLLshCghVLtFUtinllGrn9JTgKHjVgKPm39nQLdyZNZp2OSze6d1/0zAMOg1e\nOaeOtEs8lUUwni6M0K2GJZbMncx4II5MjmNEnC/QYzfBoNXgygIJuqrIF3SthpVta56LJJHjkFMu\nAPCWzd0ABLF/187+up7fZzfCr3CDhhQpDuaVUeYbdM1FU2Wn8AB5FrqrMO2yEEvBoNPIJaW1oJSg\nHxkLYMRrRbfDhOuG3E3No8dTWfzy+BQ45xhbiOF9X3+lbKOQXLKYJ+huq2GJJXMnc1FMw474BEHX\naBgG3GZKuagJzjmCscVNUUB405aaQCOlRXx5hlY+uxG71rjQbTfi+mWmW/IfQ6kI/Xv7r+DtX3oR\nF2ajsBi08oUKECKqhVgKuRzHfDSFLmvlCB1YnYIejKXhMtcu5oBwsfTaDDh8JYBXzs3WXUN+aiqM\nq/qFO4Mb13fhxGSoKaLJOceffe8NPPDvB3ByMoxXzs3h9UsLOHB5oeTx0uchP+XitugRiKdXTfu/\nJOjSBDBACJjGKOVSGsbYnzDGjjPGjjHGHmWMLa9kpA4S6RxS2VyB8PU6TPJUlnxmwsKbOj/lAgD/\n8L5dePi+PdBqqk8pKoXPblJM0I+NB3F6OownDo4t8Tp3WwxYiKYRjKeRzfEqm6Kr13Ex/45tOWzo\ntuGnRyfxwW/uw0+PTtb93FKp5E3ru8A5sO/iHP7o0UPY9rmncOeXXsCoAg1M337lkrzGc/4ILs4J\nYlXusadCQhTaUyDoBmRzfNU0oF2ajcJm1BXc2Q66LRShl4IxNgDgjwHs5pxvB6AF8H6lFlYOqako\n/wPc4zRhOrTUeGhGFPnuognwG7pt2D5Qe0VEMT67EXPRpCKdgdL5JNK5JU1OkkHXpBhtVaqxXs2O\ni4FYWu6sXQ6ffcdWfO6ebTDrtXjjSn3DUqLJjOwds3PQBYtBi2+9cgk/fmMCV69x4cx0BE/XYCBX\niclgHF986pTsInnRH8VlUdAvzZWu7poKCu/93qIcOoAlPvudysW5GEa81oIgadBtxlw0hWiH3sk2\nmnLRATAzxnQALAAmGl9SZUoJeq/DhEyOL2maWEy51G6+VQs+uxGcQ5ESsGA8Den9VmxDIBl0SQ0w\n5XxcgMUc+l/98Dj++4+ON7yudqLeCP3qNS787i0j2Npnx7GJ5Qt6MpNFOsvlv71Bp8GeYQ/2XpiH\nxaDF137nWqzxmPH6xcYqX/7hl2eQywF/+5s7MOAy4+JsBBdnhci8nH3BdCgBu0lXYFTmFnsbVsvG\n6MXZCIa91oLvdXrpYt2CzjkfB/D3AEYBTAIIcs5/WXwcY+wBxth+xth+v99f/0pFAnmOhBI9YkpF\nMiOSmAkn4LLol2W+VQtSxK9E6WIwnsaetR7cuK4LtxX5eEsR1alJoYKnUsplwGWGTsNwdjqMxw+M\ndbw1bD6CoFfvEC3H9gEnTkyUb04rh5TesuWJ5k3rhX2Z9+8ZgstiwJ5hD16/NF/363FqKoTvHxzD\n/TcPY43HgnU+Ky7MLkbol+dLR+iX56IYdFsKvrfo4Nn5gp7K5DC+EMdIkaD3NLHTWw00knJxA7gX\nwAiAfgBWxtiHio/jnD/IOd/NOd/t8/nqX6lIyZSLeFtZvDHqz2sqUhK5W1SBSpdQIoMumwGPPnAD\n7treV/AzKY3wi+NTsBq0WF+hCarXacIbf30nPvuOLYgkM6uq3rjeCF1iu9icVi59UY5oUmghz4+C\n797Rh1s2ePHAbesAAHuGPZiLpso2vlXjxTN+cA78vvh4I14rTkyEEEtl4bboMb4QRyqzNPV3ZjqC\nzT2F7xfJTmI+2vnvjdH5GHIcGPGWvqh1atqpkZTLHQAucs79nPM0gCcA3KTMsspTMuUibvxMLYnQ\nF5uKlETuFi2xEbtcKomRFKGf90dxw7ou6LWVXy6rUYch8Zayk2tt80lnc4gkM3Xl0CW29wv7Kccm\nlvYyVEKqKMqP0Nd4LPjO710vvyf3DHsAoO60y0QgAbtRJ6fb1nmtyIh3Erdu9CHHl7ayhxNpjAfi\n2NhjL/i+yyr8jVZD6WKpChdgMe3UqXcpjQj6KIAbGGMWJuw6vA3ASWWWVZ5Sgu6zGaFhS1Mu08GE\n6iP0ioJuWUwj3FJlrJqElCOs5BHfSUjvh0YEfWOPDQatBsfHl5dHLyXoxaz3WdFlNeD1S6XLC6sx\nHogXbJaP5N2lvXmTcMdbfGdxZlrYc9lcJOh2o2DQ1anRaT6TYl9K8b6U9D7p1OEmjeTQ9wF4HMBB\nAEfFx3pQoXWVJSRuIkp11wCg02rgtRkLUi7ZHMd0OIk+l/IRukmvhcOkazgPl0hnkcrk4Cgj6K48\nQa82J1NiTYMRulTv/PYvvYj7//U1/NurlxqOZt75lZfw4IvnG3qMcpS6wC8XvVaDLX12HF2moEuV\nElZj+T0axhiuGXLj8JXSgp7K5PCJxw7hycOlfbonAnH0572H14k5YZ2G4aYNQr7+clE65+y00Dm7\nubdQ0CWDrtUg6NJUMVfR3opeq4HdqOtYT5uGqlw453/NOd/COd/OOf8w57zpOw2BeBoOkx6aohry\nXqcJ03kCOxdJIpvj6HUuzx63Vry2xrtFpTddOUGXDLr6nKaK+fN8bEYd3BZ93X4VTxwcx+MHxuAw\n63B5PobPPXkcn/zu4boeCxAqgY5PhPDS2eZYy0p7BY0IOgBs7XXgjCiEgBAQ/NGjh8o27gC1RegA\nsKnHhstzsYLxhxI/PzaJJw9P4BOPHcbXX1h60ZsMFnr297vMMOg0GPJY0OswwWLQ4nLRa316Ogyz\nXlvSGtpt0cse+51MMJ6GWa8tae3hsuop5aIWyqUoehwmTOdF6FLtdp+jOb1OHqtBHhlXL7VElxu6\nbXjH9r6CWtpqrPFYcKWOsqzZSBL/309OYPdaN777wI147lNvwd07euV8ZD1IrfX5YqkkIQUidAAY\n6rJgNpJCLCWI9NhCDD9+YwLPVqghlwXdVFnQ1/tsyOR4yRLDf3/1Moa7LLhjaw/+7qlTBV7d8VQW\n89FUgaBrNQxbeu3Y3GsHYwxDHgv2XphHMJZGIi14+ZyZDmNTj21J0AMIOeTVULYYimfgMJd+XdwW\nQ8emXCq/E1VIOUHvdZjwWt7GkyTovcv0O68Vj9XQ8AizkGi16qggCI9//MZliTkArHFbcHKy+gbf\n/376DG4Y8eCmDUI655fHpxGMp/H5e6+SxWDIY8UzJ2aQy/GSAlGNszOCkE+HkgjEUgVpJCUIxMUy\n1gYfN3/vYXOvHZfE17bS3NHFlEvlj5HkG3PeH5G/BoDjE0Hsv7yAv3rnVvjsRjxzchpX5mPyZqbk\nT9RflDb8l4/sljfIf//WdfjM94/gzX//K8SSWXQ7jAgnMviNbT0l1+KxGhTzgVczoUS6rLeP29K5\nvvAdE6H3Ok0IxtNyhDMlfhj6miToXbbGI51aInSdVrNsi4JBj2BAVKmu2h9O4ivPnsV391+Rv3dm\nOgyrQYttfYuuhQMukzAtPlpfeuns9KJ4nJpSPkoPKpRykauD5qWGHeGuZKKER5CEFKFbDZUFfZ1o\nDlUspN8/MA6jToP3XbcGa8VqjEt5QYJ0MekvShv2OExyBdR7rxvE9//gJtww0oUP37gW0WQGwXh6\nyYaohKuDo9N8KhUbuC36jr1LaT9BLzLmkpBcCqX0wGQoAYNWU9NIsnrwiM51jTTwKLGhV4o1bgtS\n2VzFxqe9oivgpbx0yumpMDb02AvuCOThwnV21p2bicjt5/WkXWKpTMUNrEC8+l1OLUiCPioK+iWx\nE3OyhIunRDSZgcWgrXrBtZv06HWYcL5o5N2JySC29TvgtOgx3CU8/+W8ihVZ0KuMSdy1xoWvf/g6\n/Ld7tuGxB27Ejeu68ObNpXs+vDZhUzSZ6dwxbIAYoVcoNgh06D5C+wl6mSvvll4hqpS8saeCCfQ4\njctOV9SK22JAJscRitfvCSH9ruKCXkOli2TzenE2Kl+Uzs6ElzSjSGIyUedw4bMzYdy0oQtOs75i\nhH50LIijJYZ9f+b7R/HBf9lb9vek+bK6KjX61XBb9LAatPLfTBLWqeBSjyCJSJ6PSzXWd1txvihC\nPzsdwaZuIZJ2WQxwmvW4NBfF4SsB/Pn33sDluRgYW17acHOvHY8+cAM2lYnQt/U5kM1xnJpszp6G\nWgjFM2Uv8m6LAeFkpuQmdbvTVoLOOS8r6Ot8Vhi0GpycEnLHk8EE+hzNqXABFtvw5+pMRQCLEXq5\nSKJe1tQwmWXveUHQQwkhAp6LJDEbSS0RgkVBX36EHoynMR1KYlOPHZt77PLFthSf//FxfPw7BwoG\ndCxEU3jq2CTOzkTKGqGVu2NbLowxYTNZitBFQU9neVnP8UgyW7XCRWKDz4bz/sWL52wkibloChvz\nLqDDXRZcnovh0X2j+N6BMTz62ih67KaqDWXLYdcaYarTGxUGq6uR//6j47jvX1+r+fhQokLKRWyw\n6sRu6rYS9Fgqi0yOl3yh9FoNNnTb5MhjKpho2oYoAHhEb/JGanqD8TQsBq2iH1gg31Wv9Bt2OpTA\nhdkobhT94C/NReVmlOLuQodJB5tRV9eoNilnvLHbhs29dpyZCpdNUU2HExgPxPHrc4vljT85MoF0\nliOb4/ImdzGBeH1Oi6UY8lgwOh9DNsdxZT4ub2CWy6MLTou1+QSt77YhkszgycMTePnsrJx+yq8V\nX9tlxaW5KPZeFC62C7G04n0UfU4TfHYjDo+2j6A/dWwS33rlEp4/7a9pMzOX4wjFy6dcOrlbtK0E\nPSA3C5R+obb02XFqKgTO+ZJ5ikojzfeca6B0sVEPknJIUWO5gcWvitH5B68fAgBcnI3J1SjFm2mM\nMQy4zHVF6OfEx9zYbcfGHhvCyUzZZizp7/jd1xc3aR8/OA6DeLErd7eh5N9wyGPBlfk4JgJxpLI5\n2Whrssy5RxKZmiN0qY/gk989jN//t/04IqaX8u+IhruE5788F8M1Q0IkXS1/vlwYY9g16MLhNonQ\ng/E0/uKzsStFAAAgAElEQVSJo/LnrVJfgEQ0lUGOo2KVC6CMW6raaCtBr1bRsLXXgelQEuf9UaQy\nuaZG6JLJTyNvilC8fGlVI+i0GlgN2rKDDF49PweHSYc7r+qBVsNwcTaCM9Nh2E062bkyn36Xqa4I\nfXQ+Bq049kvyIim2OAaEjc9YKguLQYtfnpjCfDSFK/MxvHElgPe/aY38WKUIxFJLugHrZY3Hgng6\ni4OjgmhIdzDlzj2SrF3Qrxly4d27+nH/zcOIp7N4+OWLcJh0BdYUa/N8Rz7/7quwZ9gtr0FJrhly\n4YI/Kqf81EYux/Hk4XGkMjn86tQMFmJpfPUD10CvZXithiHcoUTlvalObv9vL0GvUhWypU+Idp4/\nPQOgeSWLQF6E3oCgNytCB4TKirIR+oU5XL+uC0adFmvcZlyajeHMVASbiipcJPrrjNCngkn4bEZo\nNSzvQ7T07zUbFr733msHkc5yvHJ+FifEOvp7rx6AVsPKbvAG4xnF9iCkSpcXzwhpn11rXDDrtWXT\nPdFU7ZuiFoMOX/nANfhv79yGXocJM+Gk3BwkIXl3O816bO934nsfvwkfumFtI6dUkl2DQvRfahNa\nDbx41o9PPHYYj70+imdPzcBrM+KGdV3YMeDE/iJPnKlgAk+fKGz+kgK/so1FHWwj3JaCXu4DLFW6\nPH5gDACa1vYPCH4uFoO2oQg9WCHP1yh2k65khD4eiGN0PiZHfsNeK/ZemMOB0QVcK97mF9PvMmMh\nlpa7KGtlOpSQR6BJt7ml2s6lGvebN3ih1TCcmQrL+ffNvXYMuMwYLWE2lstxBOMpxS6KUnXQDw6N\nwajToNdhQp/LVLZ0cTkpFwmNhuFduwSb5OL9Cql08U0jnrqauGplx6ATjAHfePG8Kn3BD4n5/e/s\nvYwXTs/g9i0+aDQMe0Y8ODIWkHtNOOf4k+8exse/c6DAQnixYa98HTpAEXrLqdbm7bMb0eMw4tRU\nGLvXurGppzb/k3rxNDhFPZzINDFCLxR0zjliqYycP5eMnYa7rJiLpuCzGfGHt28s+VgDNZQuJtJZ\n3P+vr+GV84ubmlOhBHrFFI4s6CUj9KT8PMNdFpyaCuPsdBgDLjNsRh3WeMwlc+ij8zGks3yJ53W9\nrPdZ8ae/sQn33zyCv/vtncKUeJcZ42XOezkpl3zuvXoAALA1r4ELEN5P79zZh/fvWbP8xS8Dp1mP\nv75nG/ZdmMc9X30J8ZS6atIPXREE/cx0BKFEBrdvEbpe96z1IJ3leEP8+Qtn/Hj1wpxgxJfntFrN\nI8ms18Ko03SkSVlbtf4vtnmXF8F//9j14Hyp01wz6LIaGk65lLstbBS7qdCA6KGXL+IfnzmLdT4r\nPFaDXP+8Rfw7ffG9O8peXCQL0rGFWEHrOucc//9ro3j7Vb349blZ/Oq0H2aDFjetF6wEpoMJ3Cxu\nLEqvWanbXOlv2GUzYHOvHScmQrAadfJzDXks+OXxpZ4qkr1BsTDWC2MMf/y2wotan9OE01NLJ22l\nszkkM7maUy75bB9w4j/+843YOVg415Yxhn/+4LXLfrx6uO/mEQx1WfC739qPl876cedVvSvyvNXg\nXBDsd+3qx3Mnp5HOctk6WtooPjYRwptGPPifT52GTsOQyXFMBOLyHVa11CxjTBzAToLeUoLxNLQa\nVjEqKtdQ0QzcVkPdVS4ZcTBDMyP0/Kj2wmwUkWQGR8aCuHtHr3xL/1vXDuLate6Kf7c1bqlRqTD1\ncGkuhr/8wTH86pRfzte/cNqPZCaLTJYjnMzIKReTXguzXlvyNleK0LtsBmzuceDnx6ag12rktNCg\n2yIP9s0X0BOTIWhYc1/zXqcZ/ogwEDy/ealWH5dyvGnEo8j6GuHWjT44TDo8fWJaNYJ+cVbYrL15\nfReu6ndgPpqSP+8eqwF2o/C+ngolcHIyhN+5fgiP7Bst2OeQNkUrFRy4LPqOTLm0naA7TLqmdX8u\nF4/VUOBVshzCVXbiG8Vu0stvbECIjPudJty43ov/J++W3qDTVBXEbrsRRp0Go0WDFKQLxjOiI+H1\nIx7suziPV8/PydFS8dT5Ure5c9EU7CYdjDotNvfawLngEy5F6Pmdr9I+CSBE6Ot9Npj0ys6Mzcdn\nMwgDwWOpgulXko+LvU5BVwN6rQZv3dKNZ0/NIJvjy/YMagaHxXTKNUPukn7ua8ReAcni482bfHhk\n36hsZAaUnplQTKcadLVVDj0Yb15EWw9CyqW+TSV5g7cJZYvC4+oKqlwWomn0u8z4h/+0a9nRoUaz\n+EHKR5qc3uc0Qadh+If/tAsWgxbPnJyWrYzzBd1l0ZfszvNHkvJYv815gi11UQ6VmcJ0cjKsWLql\nHFK5pVSJI1Fqnmg7cue2XsxHUzXVd68Eh0YDsBq0Bam9fKTmL8lr56oBJxwmHSbz9jmC8TRsRl3F\njWW3VS/3tXQSbSXogVgKToXtVxvBYzUikc7VtanULGMuCbtJh2QmJ5swLTRoXbvWY1liFzy2EINe\ny/DI712Ph+7bg0G3Bbdt9OGZEzPyLXBPXumo22IoWRU0F0nKVgpDHgtMeuFtucEnRGgjXis0DDiS\n1wwTiKUwHog3X9DFOvHZSBK5HMfLZ2fxd0+dwstiR2utnaJq5c2bfTBoNXj2VHnfdyXJ5Tjmylgp\n5HIcL57149q17rJ3C0NdUoQegVGnQZ/DhH6XuaASqZJ1roTTbKDW/1YTamLddj0s1qIvP0qXBV2h\ntvVi7OIbWkrtBGJpuVyrHiSfk/zW/bEFYd7lOp9Nnm/51i0+TIUSsuAtjdBLVLlEUnIkrNUwbOy2\no9tulP82TrMeu9d68OzJGfl3TooWD9v6VyhCjyTxyL7L+NBD+/C158/jCz8TxudWuq1vB2xGnbwR\nvRL8/NgUbvricyVF/eVzs7g8F8NvXzdY9vfXeCxIZXLYd3Eea7ss0GgY+pymggqsUA138i6LHsF4\nY26paqStBL2ZjTj10Ei3aLVa2UaRhCacyIBzjvlYSl5vPQx5LIimsgVVPWMLMdm2WOKWjYKwP3Vs\nCnajriAlUW5SzGxehA4AH7tlBH/wlvUFx9y+tRsnJkNyg9N+sWNwa19zN8G94rpmI0mcnYnAbhQa\nhDKiiVi7p1wAYVO5knGaklycjSCZyeF0CSvl7+y9DI/VgLu2l9+gldJvR8eDGBY7a/tcZkwVlS1W\nqx5zmfVIZzmiKivZbJQ2FHT1fIA8DXSLNj/lIkXoacTFYdSNmFit7Sr0CweECH3QVVgDPuAyY53X\ning6W5BuAYQLYCiRLnBUTGdzCMTSciQMAO+5ZgD33zxS8Lt3bO0GADx7agb/sf8KvvTMGdywzlOw\nUdkMbEYdjDoN5iIpjC/EMeA24107+7Bn2A2g+nCLdmBzrw0z4eSKlPHNilVhF/yFG+xTwQSePTWD\n9+0ehFFXPo0lCTrnQioOAPqdJsxHU3LDUS0pl0416GobQRe6AtUVoUspl3pmi65EDh0QInQpKnY3\nkEMvnuiTSGcxE04uidAByHXDvUXzXN0WPThHgYfIvFyDvtRDJp/1PhvWdlnwhZ+dxKcfP4Kb1nvx\n0Ef31H0+tcIYkweCjwfiGHSbwRjD37xnBz7wpiHFzbNagbQRXSpqVhrp9S4W9IOjC8jmOO7Z0V/x\n9wdcZkjpdcn7pk/sCJf2bWpJzTrlvojOyqO3jaCHE4KDmlJGTErgsZXvfqxGKJ6BQauRNwCVZlHQ\n03Lk1YigS6WDl4tmbQ56Sgi6OKO0u8joq1S3qOQ17rNVXhtjDL91zSCMOg3+6p1b8fB9e1Ys3eG1\nGTAbETZhJQHf3GvHF35rhypK/RpFcths1iDvfGRBny0s950SxbhUgJCPQaeRBXxY7BCWLIYnA8LY\nxdloquqkMsmxVa0GZfXSNveLkyFBQJrpoLhc7EYd9FpWd8rFYW5eTb10yxlKZOQopJFNUZNeix6H\nUU65SCWLg+6lbfc3ru+CUaeRc5wSskFXNAWIE9KePy10YXY7qr+uf/y2DfjEHaXtCZqJ12bEmZkw\nwomMbIPQSfQ4jFUnSinFXJkIfSqUgEGnqSktOOSxYDwQz0u5iNYUwQSmQgmkMjkMdVW2g3BVsKJo\nZ9omQpfqTNV0iyu1ENeTcqlkwK8EhSkXMUJvcL7qkMeC0bliQV/6ethNevzsE7fiY7cU5sEXI3Th\nAvMfr1/B//rFadx1VS+uHixtDJZPqxrKvDajXAOvpvefUjDGsLlHGEDSbKTqlrGFWMFc08mgML+g\nltd42GuB1aBFj7h/IgV5E4G4fAe51mMt+/vAYnDTrJRLq6pnGhJ0xpiLMfY4Y+wUY+wkY+xGpRZW\nzLg8MFc9ETogbIzWE6FXGpGlBPlDLqSNn0Yn+6z32XBmRpg6JNWgl9uUXO+zLUmJ5KdcfnJkAp99\n4ghu2+TDlz9wdVPdBRvFa1+8EA5USQm0K5t77Tg9XX6ilBJwzrEQS2HAZUaOo6CvYTqYWLLnUo4/\nvH0jHrpvj/yeMem1GHCZcW4mgtF5IfJfWyVCdzQx5fJ7334df/nDY4o/bi00GqF/GcBTnPMtAHYB\nONn4kkozGYxDqykvIK2iy1a6nb0awSYNt5DQaTWwiEMu5qPSpKfGIvStfQ4EYsKc0Av+KAbdlmXl\nkKVZjk8dm8InHzuM3Ws9+MaHrqtY1aAG8itwOjHlAgAbum0IJ8pPlFKCUCKDdJZjt1ghdMG/mEef\nDMVrTqcOuMy4oWjwx1ZxWtnluRh0Ym16JSRvoWZUuRwaDeDZk9MtidLrFnTGmBPAbQAeAgDOeYpz\n3rS5VhMB4Qqutk0oj9VYVx36SlTs2MX2/4WYYHBk0DV2/ZacGU9OhnDoysISt8Bq2Iw66DQMz52a\nwbDXim/etxtmg7rFHFgUdL2WyRYFnYa0idjMdnjpc7J7rSDo58U8ei7HMR1MNrQ/tqXXgfP+KM7O\nRDDoNhcYqZWjGQZdibTQqzEdStY15atRGvmEjwDwA/hXxtghxtg3GWOVE1cNMBGIqy7dAgAei75s\nK3MlVkbQ9QgnMgjEUnJ03AhbxDb7Z09NYzqUxLVD7mX9PmMMbqsBFoMWX//QtU29Q1ESSdD7nGZV\np4YaQXovhpoo6NLnZKjLih6HUR5iMh9LIZXNoa/GlEsptvTZkc1x/PrcLIa6apMhl0X59v98ET/Y\ngkHcjQi6DsC1AP4P5/waAFEAny0+iDH2AGNsP2Nsv9+/1Fe6ViaCcblcSU14rEbxVjJX/WARznlN\n3WyN4jDpEEqksRBLN1SyKOE06zHgMuOHhyYAYNmCDgCffvtm/MtHdmND98rZHDeK1C3aqekWYDGn\nHCoztrAar56fkxt7yiH73lsN2DHgkp0VpZLFRiaMSXePsVQWaz21DTxxmYX2fyUZz7OYPtgCw7NG\nBH0MwBjnfJ/478chCHwBnPMHOee7Oee7fT5fXU+Uy3FMBRNyvamakGvRl5F2iSSFmvqVjNAbMebK\nZ2ufHZFkBia9Rp7huhzet3sNbhbr1NsFKULv1A1RQLj4A0J/xHKZCMTxgX/Zi++Jox/LIaVcPFYD\nrl3rwsXZKOajqTxBr//zPdxllVOK1TZEJcq5fzaC3J/hNuPQaBsJOud8CsAVxthm8VtvA3BCkVUV\nMRtJIp3lqoyQ5G7RZWyuNLtLVEIaQ7fQoDFXPpK74c5BF/Q15Ck7AZdFjx6HEdubbATWShqJ0C+J\nPvlnqzQmSSkXj9Ug390dvrKASdGHpZGh7jqtRh45OVRrhF7GW6gRxgNxaBhw944+HJ8IVb1rUZpG\nP5F/BOARxtgRAFcD+NvGl7SUiaD0gqtP0D11tP9LUVCzBd1l0WMqmMBMOKFIygVYHMRdT7qlXWGM\n4cVPvxUfuXG41UtpGnY5Ql++wElphvP+ysNe5sTpQya9FjsHndBqGA5eDmBKrGDzNrjhLL0319ac\nQ1fecXE8EEevw4Q9wx5kchxHxoKKPXYtNCTonPPDYjplJ+f8PZzzptxjTKq0Bh2oz6Cr2cMtJD5y\n4zDsJh0S6Zxign7dWjfsRh1u39KtyOO1C0adtmM3RAHh/Ex6TcGUq1qRmsyKuz+Lmc9rybcYdNja\nZ8fB0QVMBZPothsbrmC7YV0X3BZ97SkX0XExpqDjomTgJs0/PbjCaZe2uGeWm4rUHKHXI+hNjtA3\n9djxw/9yM95+VQ9u3aRM3rrXacLRz79dFTMxCWVxmPQI1pGCkAR9MpiQZ62WYr7IY+XaITfeuBLA\nsfGgIpYe7712APv+6x01jySUB5crWNkzERT8frw2I9Z2WVZ8Y7QtBH0ymIBZr22407EZuC0GMLa8\nCF3KU66Ec2S/y4xvfHj3qkqREPXhMOvryqGPBxY7PqVZn6WYjaTkPScAuHFdF6KpLE5PhxV5fzLG\nltVrIfu5KGQbnM1xTAYS8l7ftUNuHBwNrGiDUVuYc+1e64bFoFXNcOh8tBoGl1m/rDdFaIUidIJY\nDlKZ63IZWxBGAZ6cDOG8P4LtA6UbzuajyYKN5bdf1YunPnkruu0mxTbtl4PSjosz4QQyOS5XQ107\n5MIPDo1jbCEuu5U2m7aI0N+xow+funNz9QNbhNtaelZmOYLSVPIOmHZDdA5Os37ZZYuZbA5TwQRu\n2dAFDVvs/iwmnhL88/PNzTQahi29DnishpYEay55yIUygj4RKDRwu1bsiD04uoBj40Hkcs2P1NtC\n0NWO3aRHuELusBjJx6WTN9mI9qOelMt0OIlMjmOdz4ZBt6XAnyWf8/4IOBf2ddTCYg5dmZSLNGBD\n2uvb3GOHxaDF5398Avd89WU8fbL5g7hJ0BXAotcinqpd0OeKcokEoQYcJv2yyxbHRH/8AZcZ633W\nspUuUpv/RrFWXA1Ie1hKRejF5cg6rQa3bvSCc47P3LVFHvzSTOieXwEsBi2mQrW/KWYjyYZrbglC\naRxmHULiUPFKKZCvv3Ael+di+MJv7ZAr0AbdZmzotuGV83PIZHNLzLHOzoSh07AlQ09aidKOi2Hx\n7kaq6QeAf/qg0Dy/Uk14FKErgNmgRXwZtazFU+4JQg04THpkc9Xrsp87OYNHXxvFsfGgXLLY7zJj\n+4ATyUwO50qkXc5ORzDstTbs+Kk0Srb/hxMZaDUMljwHUb1Ws6Id1er667YpFoN2Wc0Jc9EUReiE\n6qi1/V+aA/vV587ixTN+dNuNMOm1uKpfqG45mtcd+f0DY7g0G8W5mQg2dqsn3SLhNCtnoRtOpGEz\nNm+sZC2QoCuAxaBDrMYcejqbQyCWJkEnVIfUuVytjM8fSUKvZfjF8WkcGF3An4kVaOu8VlgNWhwb\nFwR9PprCp773Bj71vTdwaS6qSkF3WwyKOS6GE5mCdEsroBy6AiwnQp8TPV8o5UKoDcnOuVLpYiKd\nRTiRwYdvWIsTkyHcd9Mw3rWrH4BQhrit34GjoqDvvzQPADggdktuUFGFi4TLopc3bBsllMjA3mKP\nfxJ0BbAYtMjkOFKZXNUcoXS7ShE6oTZqGXIhdURv63fgf7xn+5Kfbx9w4tHXRpHNcbx+aR4GrQYu\nix4z4aQqI3SXRa9Y6384kW55hE4pFwUwG4QXsZaN0UVBpwidUBdSyqVSDn02XDkg2THgRCKdw3l/\nBK9fWsCuNU78+ds3Y22XBet86qlwkXCaDQjElHFcDCUysq98qyBBVwBpVzuWrp5Hl1IuFKETasNR\nQ4ReLSCR2v5fPOPHsfEgdg978L7da/DCn79VlcPA3RblHBeFCL21KRcSdAWQBX05EbqdBJ1QF7In\negkLXc45Mtlc1ZThep8N2/oc+NufnUQmx7FnWN2mcEo6LqphU5QEXQHMol1nrSkXo04DaxtMuydW\nF3qtBhaDdkmEfmoqhLf+/fP45HcPY1a8w/SVCUi0GoaH79uDPqcZjAHXDanbZtlplvxcGqt04Zwj\nkmy9oNOmqAJYRZOtSl7QEnMRoQZdjc6RBOEwFW4SXpyN4jf/+RXE01kE40K5rTR1qBy9ThMee+AG\nHJ8IwqlCy+t85Ai9wVr0WCqLbI5TyqUTMMs59OoRuj+SpA1RQrV0O4yYETc+AeDX52YRT2fx0RvX\nYiGWxvGJYE3v3zUeC+7a3tfMpSqCWyHHxbCYpmp1hE6CrgBSDr2WlIsUoROEGulzmmQbWEAY/Gwz\n6nCPWGt+cDTQUe9fpRwXF31cKEJveyx64apc66YoNRURaqXfZcZkIC6X8Z2eDmNTjw1b+4TBFNkc\n7yhBV8pxMUQReudgliP0yjn0XI6TjwuhavqdZkRTWYTiguvi6akwNvfaYTPq5OHLXnvnBCQmvTAc\nu9FNUSlCpzr0DqDWssVgPN1xEQ7RWUjTdiaCccxGUliIpbGxW2jZ39orROmd9v51WwwK5tAp5dL2\nSGWL0SqCrpaNE4IoR5/LBEAYp3ZmOgwA2NwrCPq2/s4UdKe58fZ/tXy2SVkUQKNhMNcwtUjqJLUY\n6M9OqJMBOUJPIJ3JAVgcG7etrzMF3WXRI9hwhN4hm6KMMS1j7BBj7CdKLKhdqcVxUaqCsVBTEaFS\nvDYjdBomR+geq0EuU7x1kxd/cscm3Lap+aPUVhKX2YCFhnPoGWgYWt4wqESo+AkAJwE4FHistqWW\nqUVxsU69UlMGQbQSrYah12nCZCCOC7OCh7nUBGfUafGJOza2eIXK47bqsXC58Qi91cMtgAYjdMbY\nIIB3AvimMstpX2qJ0BOioJspQidUTL/TjAOjCzgyFsStGzsrGi+Fy9K442JYBV7oQOMpl38E8GkA\nOQXW0taYDbqqnaLxlPBnMlOETqiYfpcJV+aF5qJ7rx5o8Wqaj9uiRybHqxY1VCKkAmMuoAFBZ4zd\nA2CGc36gynEPMMb2M8b2+/3+ep9O9Vj0WsSqeLlIKRcSdELN9Ikbo7vXurHGY2nxapqPSzToWojW\nn0cPJ9Kyn3wraSRCvxnAuxljlwA8BuB2xth3ig/inD/IOd/NOd/t8/kaeDp1YzXWsCkq5dANVC1K\nqBepFv3eazo/OgeUMegKJzKwtXOEzjn/C875IOd8GMD7ATzHOf+QYitrM8wGnSzY5UikKEIn1M8t\nG7y4fUs33r2zv9VLWRHcVjFCb6DSJRhPt7xLFKA6dMWw6LWIVatDJ0En2oARrxUP37en1ctYMdxi\nhF6voKezOUyFEhh0tz49pYigc86fB/C8Eo/VrphrqUNPZ2HQaqDTUsqFINSCS7TQDdbZLTq+EEc2\nxzHU1XpBJ2VRCItYh16p9CmRzsKkpz85QagJyXFxIVqfoF+ejwEAhrtaPwSb1EUhLAYtMjmOVLZ8\nBWc8laUadIJQGXqtBnajru6Uy+W5KADIbpSthARdISR/lkrdovF0lvLnBKFCXFZ93Ra6l+diMOk1\n6FbB4HcSdIWoxUI3ns5S2z9BqBC3xVC34+LluRjWeqwtb/sHSNAVw1yDoCfSlHIhCDXishiwUGcd\n+uW5qCo2RAESdMWQUi6VShfjqSw5LRKECnGZ60u55HIco/MxDJOgdxaSxag/b2J6MbEU5dAJQo24\nLfq6Wv+nwwkkMzkMqaDCBSBBV4z+vMEA5UhQDp0gVInLYkAokUGmQpVaKS7PSSWLFKF3FD6bEXqt\nMBigHFTlQhDqROoWDSUqd3vnwznHT45MABC6a9UACbpCaDQMPQ5hMEA54rQpShCqpB4/l688ew7f\n2TuK+24aVkXbP0CCrij9LjMmAuVTLnHKoROEKpG6RWvdGE1msvjnX53D3Tt68bl7tjVzacuCBF1B\n+p0mTARLR+i5HEcyk6McOkGoELdF8kSvrXTx1GQYqWwO9+zsh0bT+vpzCRJ0BelzmTEdSiCdzeGH\nh8aRzttgSWRoQDRBqJU+lwkAMCr6slTjyFgAALBz0Nm0NdUDCbqC9LvMSGc5Hnv9Cj753cN47tSM\n/DPJEoBy6AShPrrtJnhtRhyfCNV0/BtjQXRZDRgQq9vUAgm6gvQ7hav84wfGAABnp8Pyz6QOUkq5\nEIQ6uarfgeMTwZqOPTIWwM5Bpyra/fMhQVeQPqdwtX7jinA7dmY6Iv8sQfNECULVXNXvwLmZCJKZ\nynMNoskMzs1EsHPQtUIrqx0SdAUpvv06O7Mo6DQgmiDUzVX9TmRyHGemIhWPOzYeRI4Du9aoK38O\nkKArisOskzc9b1rfhfP+CLI5YeAF5dAJQt1c1e8AgKppl6Pjws93DFCE3tEwxtDvMsNp1uPeq/uR\nyuTkXXMpQqccOkGokyGPBTajrurG6MnJMHx2I3wq8D8vhoZEK8zdO/oAzrG5V7jan50OY8RrlXPo\nVLZIEOpEo2HY1ld9Y/TMdBhbeu0rtKrlQRG6wvzpb2zCn965GRu6bQAW8+iUQycI9bOlz46z05Gy\ns4GzOY4z02Fs7iFBX1XYjDoMuMxy6WI8JTQZUQ6dINTLiNeKcDKDuTJWupfnokhmcthMEfrqY323\nTY7QpcEXlEMnCPUiuSZenI2W/PnpKSFA2yKmVNUGCXoTWee14tJsFJxzqkMniDZgnVdIlV70Fwp6\nOJHGiYkQTk2FoWHAxh5bK5ZXlbo3RRljawD8G4AeABzAg5zzLyu1sE5guMuCaCoLfySJeDoLrYZB\nr1VXZxlBEIsMuM3QaxkuFEXoD718EV959iyGPBYMd1lVe6fdSISeAfApzvk2ADcA+C+MMfX4SKqA\nYfH27dJsDPFUDma9VnWtwgRBLKLVMKztsuLibGFz0fhCHDkOXJqLqTZ/DjQQoXPOJwFMil+HGWMn\nAQwAOKHQ2tqeEVnQozTcgiDahBGvdUkO3R9JYsBlRjKTxZtGPC1aWXUUqUNnjA0DuAbAPiUer1MY\ncJmh0zBcnIsiFE9TDTpBtAEjXiteOONHNsehFb3OZyNJbO614xsfvg56rXq3HhteGWPMBuD7AD7J\nOV/SYsUYe4Axtp8xtt/v9zf6dG2FTqvBkMeCi/4o9l2cxy4VmvkQBFHIiNeKVCZXMB/YH06Kc4PV\nK4uuP1AAAAXfSURBVOZAg4LOGNNDEPNHOOdPlDqGc/4g53w353y3z+dr5OnakmGvFS+d9WM2ksRt\nm1bf+RNEu1FcupjLccxGUvDaDa1cVk3ULehM2N17CMBJzvn/Vm5JncVwlxVR0Zjrto3eFq+GIIhq\nrJP2vuYEQV+IpZDNcfhs6vNuKaaRCP1mAB8GcDtj7LD4390KratjGPEK08C39jnQ7TC1eDUEQVTD\nZzfCatDigliL7o8kxe+r//PbSJXLywCoBq8KUunibZsoOieIdoAxhhHfYqXLbFiwAVCju2Ix6s7w\ndwA7B11404gH7712sNVLIQiiRka8NlnQ/ZEEABJ0AoDTrMd//OcbsUml7mwEQSxlxGvF2EIMyUwW\n/rCQcvHaOnhTlCAIolNZ57Uix4Er8zH4w0mY9BrYjOofH0GCThAEUYRUunjBH8VsJAWf3dgWth0k\n6ARBEEUM59WiS01F7QAJOkEQRBFOsx5em0EWdC8JOkEQRPsimXT5I8m2qHABSNAJgiBKss5rw2uX\n5jEfTbVNhK7+bVuCIIgW8AdvWQ+PzYDZcBLv2tXX6uXUBAk6QRBECYa9Vnzmri2tXsayoJQLQRBE\nh0CCThAE0SGQoBMEQXQIJOgEQRAdAgk6QRBEh0CCThAE0SGQoBMEQXQIJOgEQRAdAuOcr9yTMeYH\ncLnOX/cCmFVwOe3AajxnYHWeN53z6qDec17LOfdVO2hFBb0RGGP7Oee7W72OlWQ1njOwOs+bznl1\n0OxzppQLQRBEh0CCThAE0SG0k6A/2OoFtIDVeM7A6jxvOufVQVPPuW1y6ARBEERl2ilCJwiCICqg\nOkFnjN3FGDvNGDvHGPtsiZ8zxthXxJ8fYYxd24p1KkkN5/w74rkeZYy9whjb1Yp1Kkm1c847bg9j\nLMMY++2VXF8zqOWcGWNvYYwdZowdZ4y9sNJrbAY1vL+djLEfM8beEM/7/lasUykYYw8zxmYYY8fK\n/Lx5GsY5V81/ALQAzgNYB8AA4A0A24qOuRvAzwEwADcA2Nfqda/AOd8EwC1+/Y7VcM55xz0H4GcA\nfrvV616B19kF4ASAIfHf3a1e9wqd938F8D/Fr30A5gEYWr32Bs75NgDXAjhW5udN0zC1RehvAnCO\nc36Bc54C8BiAe4uOuRfAv3GBvQBcjLH2mA9VmqrnzDl/hXO+IP5zL4DBFV6j0tTyOgPAHwH4PoCZ\nlVxck6jlnD8I4AnO+SgAcM5Xy3lzAHbGGANggyDomZVdpnJwzl+EcA7laJqGqU3QBwBcyfv3mPi9\n5R7TTiz3fD4G4erezlQ9Z8bYAIDfBPB/VnBdzaSW13kTADdj7HnG2AHG2EdWbHXNo5bz/icAWwFM\nADgK4BOc89zKLK8lNE3DaKZoG8EYeysEQb+l1WtZAf4RwGc45zkhcFsV6ABcB+BtAMwAXmWM7eWc\nn2ntsprO2wEcBnA7gPUAnmaMvcQ5D7V2We2H2gR9HMCavH8Pit9b7jHtRE3nwxjbCeCbAN7BOZ9b\nobU1i1rOeTeAx0Qx9wK4mzGW4Zz/cGWWqDi1nPMYgDnOeRRAlDH2IoBdANpZ0Gs57/sBfJELCeZz\njLGLALYAeG1llrjiNE3D1JZyeR3ARsbYCGPMAOD9AH5UdMyPAHxE3Cm+AUCQcz650gtVkKrnzBgb\nAvAEgA93SLRW9Zw55yOc82HO+TCAxwH8v20s5kBt7+0nAdzCGNMxxiwArgdwcoXXqTS1nPcohLsS\nMMZ6AGwGcGFFV7myNE3DVBWhc84zjLE/BPALCLvjD3POjzPGPi7+/OsQKh7uBnAOQAzC1b1tqfGc\nPwegC8DXxIg1w9vY1KjGc+4oajlnzvlJxthTAI4AyAH4Jue8ZOlbu1Dja/0/AHyLMXYUQuXHZzjn\nbevCyBh7FMBbAHgZY2MA/hqAHmi+hlGnKEEQRIegtpQLQRAEUSck6ARBEB0CCTpBEESHQIJOEATR\nIZCgEwRBdAgk6ARBEB0CCTpBEESHQIJOEATRIfxfvq9lTNwSMqoAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116a4a1d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(eeg.time,eeg.mean('channels').mean('events'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coordinates:\n",
      "  * channels    (channels) |S3 '001' '002' '003' '004' '005' '006' '007' ...\n",
      "    samplerate  float64 200.0\n",
      "  * events      (events) (numpy.record, [('subject', 'S256'), ('session', '<i8'), ('list', '<i8'), ('type', 'S256'), ('item', 'S256'), ('itemno', '<i8'), ('recalled', '<i8'), ('mstime', '<i8'), ('msoffset', '<i8'), ('rectime', '<i8'), ('intrusion', '<i8'), ('eegfile', 'S256'), ('eegoffset', '<i8'), ('serialpos', '<i8')]) ('BW001', 1, -999, 'SESS_START', 'X', -999, -999, 683395115, -999, -999, -999, '/Volumes/rhino_root/data/eeg/BW001/eeg.noreref/BW001_24Jul02_0001', 2841, 0) ...\n",
      "  * time        (time) float64 0.0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 ...\n",
      "\n",
      "\n",
      "OrderedDict([('samplerate', 200.0), ('gain', 1.0)])\n"
     ]
    }
   ],
   "source": [
    "print(eeg.coords)\n",
    "print \n",
    "print\n",
    "print(eeg.attrs)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\"Data Coordinates\" are marked with a star, and correspond to axes of our array. Other coordinates are not aligned to the data, but do persist under certain transformations. \n",
    "\n",
    "With ECoG data, it is usually more informative to look not at the voltage at each electrode, but at the difference across adjacent electrodes. \n",
    "The MonopolarToBipolarMapper class takes a list of which pairs are adjacent to each other, and returns a TimeSeriesX \n",
    "with the 'channels' dimension replaced by 'bipolar_pairs'."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<xarray.TimeSeriesX (bipolar_pairs: 72, events: 444, time: 200)>\n",
       "array([[[ -91.,  -93.,  -97., ...,   17.,   33.,   10.],\n",
       "        [-199., -189., -183., ...,  -59.,   -7.,   68.],\n",
       "        [ -54.,  -55., -121., ...,  246.,  232.,  215.],\n",
       "        ..., \n",
       "        [-131., -144., -158., ...,   88.,  108.,  127.],\n",
       "        [-165., -169., -183., ...,   28.,   22.,   35.],\n",
       "        [  63.,   71.,   68., ...,  -32.,  -38.,  -34.]],\n",
       "\n",
       "       [[ -47.,  -41.,  -28., ...,  -90., -143., -182.],\n",
       "        [ 147.,  136.,  128., ...,   85., -101., -287.],\n",
       "        [   6.,  -32.,  -49., ...,  -23.,  -10.,   -8.],\n",
       "        ..., \n",
       "        [  87.,   93.,   97., ...,   -3.,   -6.,  -26.],\n",
       "        [   1.,   14.,   51., ...,   85.,  194.,  255.],\n",
       "        [-127., -135., -116., ...,  -31.,  -41.,  -34.]],\n",
       "\n",
       "       [[ 103.,  103.,  104., ...,  255.,  449.,  625.],\n",
       "        [  43.,   42.,   50., ..., -384., -319., -269.],\n",
       "        [ 115.,  122.,  149., ...,  121.,  111.,  106.],\n",
       "        ..., \n",
       "        [  30.,   41.,   55., ...,   40.,   47.,   53.],\n",
       "        [  -5.,  -26.,  -70., ...,  120.,  -11.,  -86.],\n",
       "        [ -78.,  -73.,  -85., ..., -133.,  -66.,  -79.]],\n",
       "\n",
       "       ..., \n",
       "       [[  73.,   92.,  100., ...,   24.,   32.,   -2.],\n",
       "        [   1.,  -49.,  -91., ...,  140.,  170.,  131.],\n",
       "        [  -1.,   11.,   -1., ...,  -23.,   -4.,   13.],\n",
       "        ..., \n",
       "        [  39.,   29.,   40., ...,   37.,   38.,   39.],\n",
       "        [ -66.,  -61.,  -40., ...,  -39.,  -40.,   20.],\n",
       "        [  22.,   47.,   90., ...,  -59.,  -57.,  -48.]],\n",
       "\n",
       "       [[ -64.,  -72.,  -49., ...,   -4.,   -8.,   25.],\n",
       "        [ -55.,  -39.,  -65., ...,   41.,   21.,  -28.],\n",
       "        [ 153.,  142.,  134., ...,   85.,  116.,  156.],\n",
       "        ..., \n",
       "        [  -5.,   21.,   64., ...,  167.,  204.,  259.],\n",
       "        [  -2.,  -11.,  -13., ...,   36.,   41.,   34.],\n",
       "        [ -75.,  -82.,  -58., ...,    3.,  -20.,  -60.]],\n",
       "\n",
       "       [[ -20.,    3.,   38., ...,  -20.,   -9.,   11.],\n",
       "        [ -93.,  -97.,  -95., ...,   37.,   58.,   73.],\n",
       "        [  72.,   52.,   34., ...,  -72.,  -60.,  -44.],\n",
       "        ..., \n",
       "        [-111.,  -71.,  -59., ...,   46.,   46.,   25.],\n",
       "        [  12.,  -10.,   -9., ...,   31.,   38.,   33.],\n",
       "        [  19.,   35.,   66., ...,  -29.,    5.,   34.]]])\n",
       "Coordinates:\n",
       "  * bipolar_pairs  (bipolar_pairs) (numpy.record, [('ch0', 'S3'), ('ch1', 'S3')]) ('001', '002') ...\n",
       "    samplerate     float64 200.0\n",
       "  * events         (events) (numpy.record, [('subject', 'S256'), ('session', '<i8'), ('list', '<i8'), ('type', 'S256'), ('item', 'S256'), ('itemno', '<i8'), ('recalled', '<i8'), ('mstime', '<i8'), ('msoffset', '<i8'), ('rectime', '<i8'), ('intrusion', '<i8'), ('eegfile', 'S256'), ('eegoffset', '<i8'), ('serialpos', '<i8')]) ('BW001', 1, -999, 'SESS_START', 'X', -999, -999, 683395115, -999, -999, -999, '/Volumes/rhino_root/data/eeg/BW001/eeg.noreref/BW001_24Jul02_0001', 2841, 0) ...\n",
       "  * time           (time) float64 0.0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 ...\n",
       "Attributes:\n",
       "    samplerate: 200.0\n",
       "    gain: 1.0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bipolar_pairs = tal_reader.get_bipolar_pairs()\n",
    "bipolar_eeg= MonopolarToBipolarMapper(time_series=eeg,bipolar_pairs=bipolar_pairs).filter()\n",
    "bipolar_eeg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x11596a7d0>]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nTfm/q7iyn9JisWAAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1167dfa90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(bipolar_eeg.time,bipolar_eeg.mean('bipolar_pairs').mean('events'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can use the `sel` method of DataArrays to filter the timeseries under consideration; for example, we can only look at the events of type \"WORD\":"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1162587d0>]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYAAAAD8CAYAAAB+UHOxAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJztvXl0ZGd57vu8Nc8qzbN67nYP7vbQngfauMFDEnwgkAMk\nAQwrDgRuck6SGyCsA0lIDuQkN+ESSIjDBRNC8CEhDj7Y2LixjW3sdrs99DypR81TSTXP9d0/9v62\nSlINu1Slkqrq/a2l1VLVVu29W1Xf870zCSHAMAzDNB6G1b4AhmEYZnVgAWAYhmlQWAAYhmEaFBYA\nhmGYBoUFgGEYpkFhAWAYhmlQWAAYhmEaFBYAhmGYBoUFgGEYpkExrfYFFKKtrU2sX79+tS+DYRim\nZnj99denhRDteo5d0wKwfv16HD58eLUvg2EYpmYgost6j2UXEMMwTIPCAsAwDNOgsAAwDMM0KCwA\nDMMwDQoLAMMwTIPCAsAwDNOgsAAwDMM0KCwADMMwawAhBH74+jCCsWTVzskCwDAMswY4PxXGH/zb\nEfzordGqnZMFgGEYZg1wxRcGAIzMRat2ThYAhmGYNcDwrLLwj7IAMAzDNBZDvggAFgCGYZi64fAl\nH35ybAyheKrgcfMWQKwalwWgQgJARPcS0RkiGiSiz+R4fh8R+YnoLfXr85U4L8MwzFrnD//tCD7x\nvTdw25efxZg//+5+aFaxAMYDMaTSmapcW9kCQERGAF8HcB+AHQA+QEQ7chz6ohDiGvXrz8o9L8Mw\nzFonnREYno3ipg0t8EeTOHhhJu+xw7NR2MwGpDMCk8F4Va6vEhbAjQAGhRAXhBAJAI8CeKACr8sw\nDFPTTAZjSGUEfml3N6wmA06MBHIeF4wlMRdJ4rqBZgDViwNUQgB6AQxl/TysPraYW4noKBH9hIh2\nVuC8DMMwaxrp1x9oceCqbg9OjOYWAHncjRtaAFQvFbRaQeA3AAwIIXYD+DsA/5nvQCJ6iIgOE9Hh\nqampKl0ewzBM5RlRF/a+Zgd29nhwYtQPIQSEEAuOkxlAUgCqFQiuhACMAOjP+rlPfUxDCBEQQoTU\n758EYCaitlwvJoR4WAixVwixt71d11hLhmGYNYncyfd67djZ40EglsITx8Zw3RefwfmpkHactAC2\ndbrhdZhrygX0GoAtRLSBiCwA3g/g8ewDiKiLiEj9/kb1vPmjIQzDMHXA8GwErU4L7BYjdvY0AQA+\n+x/HMBtJ4vRYUDtuaDYCh8WIFqcFPU32qglA2UPhhRApIvoUgKcBGAF8Swhxgog+rj7/DQDvBfAJ\nIkoBiAJ4v1hsAzEMw9QZw7NR9DXbAQBXdblhNBCCMaUeYCasZPrEkmkcODWBbV1uEBF6vHYMqymh\nK03ZAgBobp0nFz32jazvvwbga5U4F1MfxFNpXJwO46ouz2pfCsNUnIvTYTQ7zBiZjeKqbjcAwGY2\nYkuHC7ORBCaDcUyrqZ7f+sVFDPmi+NK7dwMAer02HL7sq8p1ciUwsyr88PUR/PJXX4IvnFjtS2GY\nivPhbx3C7z76Fkbmouj12rXH//p9e/Dtj9yIFocF0+EE5iIJfP3ZQezf3onbtyhh0f/73qvw2uf2\nV+U6K2IBMEypDM1GkMoIXPFF0OK0rPblMEzFEEJg3B/DFTWzp6/ZoT23q1eJA7S6LJgOxnFyLIBw\nIo0P37pOO8Zlrd6yzBYAsypMqeavTJNjmHohnEgjkdXKIdsCkLS5rJgJJ7R0z/4skagmLADMqjAd\nUgVgrjrBLoapFrOqW7PDbQUA9LcsXdxbXVbMhOIYU7N9upps1bvALFgAmFUh2wJ45fwMrv/iM5iL\ncDyAqR6HL/lwZjy44LFKJCfORZSRjp+57yr81Xt3Y2una8kxbS4LpkMJjPqjaHNZYDMbyz7vcmAB\nYFaFeQsgihfOTWEmnNB8pgxTDf7o34/ik//6hrbovzw4jb1/fmBBgdZymFU3Mv0tDrxvbz/UEqgF\ntLmsCMVTOD8VRk8OF1G1YAFgqk4mIzAdUj4kw7NRnBpT+qPMcEYQU0UmAjEMTobw4rlpzIYT+O8/\neAsz4QQuTIXLel0pAM0Oc95j2lxK4sOJET+6V8n9A3AWELMKzEWTSGcEzEbCyGxU+8DMhFgAmOoQ\nSaQQTqQBAF/92TkIABMBxSoNRJNlvbZ0AXkd+bPb2lxKfCCcSLMFwDQW0v+/o9uDYDylffB84er0\nQGeY6aCy2Vjf6sDhy7M4OxHEn75LaVIciJUnAHJD47XntwBaVQEAcmcJVQu2AJiqI/3/e/q9ODLs\n1x5nFxBTLabU9+Af3rMNE4E43rWnB80OM77w+AkEooVHNxZjNpyA22aCyZh/fy1dQADYAmAaC2kB\nXNPv1R5zWIzwsQuIqRLyPbi+1YmP3b4B7W4rTEYDnBZjBSyAZNHixrYsC2A1YwAsAEzVybYAACVf\nekObky0ApmrI92D2QgwAHrsZwQq4gAr5/wGlL5Cs+F1NFxALAFN1poJxWIwGbGh1wmoyYHu3By1O\nCwsAoyHbKawUUgBaXQsXarfNVLYLaC6SLJgBJGl1WWA20hIRqiYsAEzVmQrF0e62wmAg/PadG/Hr\nNw2g1WnhIDCj8epFH2758s9wYtRf/OBlMBWMo9lhhnmRn95jM1ckCNxcxAIAFOuju8kOg2FpnUC1\n4CAwU3WmQwktCPb779wGADh4wccxAEbj4nQYQgAvnpvWBqlUkml1E7IYj92MyWB5lsdcJAmvDgvg\nl3d3l21tlAtbAEzVmQou/fC1uiwIJ9KIJdOrdFXMWkL2yj94YWUGByqbkBwCUKYLKJHKIBRP6bIA\nHrxtA35v/5Zln6sSsAAwVSMQS+K7r1zCsC+y5MPXqmZNcByAAeZ99K9d9CGV1VmzUkwF47kFoMwg\nsOxn1VwjLc5ZAJiq8b2DV/A/fnQCJiPhzq3tC56TaXPsBmIAaK1Cwok0jo8GVuD1c7uA3DYTArHU\nsprCffPFC3j29CSAwm0g1hIcA2CqRjCWhMlAeON/vGNJgyyZjTHDgWAGSqLAxjYnLkyHcfDCzIKa\nkXIJx1OIJNJ5XEBmpDMCkUQazhIHs/yvp85o3+txAa0F2AJgqkYsmYHNbMzZHbHFqXwYeUQkAyg7\n9O3dHmxsd+LwpcrOx5XupXxBYKD0dhDxlDIERg6C0RMEXgtURACI6F4iOkNEg0T0mRzPExF9VX3+\nKBFdV4nzMrVFLJWGzZz7LadZAOwCYqC8D1pdFvQ1O7Sq3UoxXwS2dJfusakCUGIgOBxXkhdMakpn\nrVgAZbuAiMgI4OsA3gFgGMBrRPS4EOJk1mH3Adiift0E4B/Uf5kGIpZMw2rKPfjCbTXBbCQOAjNI\npDLwR5Noc1nhjyZxeaa89syLkYKS2wJQlsRSA8GhmCIYv3v3FlhMhlVt71AKlbAAbgQwKIS4IIRI\nAHgUwAOLjnkAwD8LhYMAvETUXYFzMzVEPJnJawEQEVq4GIzBfByozWWF127W2itXitPjQRDlHtXo\nti3PBRSMK8dv63Lj42/blNPNuRaphAD0AhjK+nlYfazUYwAARPQQER0mosNTU1MVuDxmrRBLpguO\nvmt2WCr+YWdqD9mquc1lQZPDgkBMmR9RKV6/PIttnW7N3ZONx6ZYAKW6gKQF4C4xcLzarLkgsBDi\nYSHEXiHE3vb29uK/wNQMSgwgvwA4rSaEE6tbGcmsPpqP3q1YAEKUP6RFks4IvHllDteva875fHYQ\nuJRU0FBced+Wmjm02lRCAEYA9Gf93Kc+VuoxTJ0TK+ACApSW0KE4VwI3OrJXf7vLimansiDPlSkA\nhy768N5/eBmHLvoQiqewd31uAXCrFsCxYT92fuFpvO8bL+Olc9NFX18KgMvWeALwGoAtRLSBiCwA\n3g/g8UXHPA7gQ2o20M0A/EKIsQqcm6khYsk0bHmCwADgspoQibMF0Ohkt2r22pVsGllhu1wOX/bh\n8OVZ/OG/HQEA7F3XkvM4q8kIm9mAx4+MIpJIY3g2iv/+g7eKvr4UgIZzAQkhUgA+BeBpAKcA/EAI\ncYKIPk5EH1cPexLABQCDAP4JwO+Ue961RiYj8A/Pn8d7/v4X2puBWUixGIDTakKY/+8anulgAk6L\nEXaLEU1qPn25sSG/akGMzEXR7rairzl/D363zYx4KoNrB7z4rTs2YioYL9ogTsYAas0CqMjVCiGe\nhLLIZz/2jazvBYBPVuJca5U/+LcjeOxNxat1biKIawdym5iNTCyZgbWAC8hlNbF4MpgOxbWZuXKu\n7ly0PAvAH0nCYTEilRG4YX1zwSwdj82EqWAc9+zsws4eDwDgxGgAHdvyp3aG4ikYCLAX2OCsRWpL\nrtYomYzAE0fHcN2AF29cmVvRQRa1TLxoENiIcCINIUTNpNExlWc6FNeKtGRBVSUsgB6vHX/5q7vR\n6Sk8gEUGgu/Z2aVdx8nRAO7a1pH3d4KxFJxWU829b9dcFlAtMhGMIZHO4O7tnQCAURaAnMSSmYIx\nAIfFhHRGIJ6qfPdHpnYYD8S0Ii25GFdCAJrsZly/rhl9zUvz/7PpabJjV68HG9qccNvMWNfqWDKY\n5udnp/DHjx3Tfg7FUzXn/wdYACrClZkIAODq3iZYTQaMzUVX+YrWJkoMoLALCADHARqIUDyF59QO\nmoCSfnlxOqwNgTEaCB6bqewgsBQAPXzpV6/Gdz8636hgR7cHJxd1JH321AT+9dUrWqvqcDxVc/5/\ngAWgIgzNKgv+QIsDPV47xgJsASwmlc4glRFFg8DAfF8Vpv559NAVPPjIa1p7hqNDfgiBBd0/vQ5L\n2WmgcxH9AuCxmRf089/Z48GlmciC9hABNegrg8uheErbwNQSLAAV4IovAiKgx2tHd5ONLYAcxFS3\nTmELQBEHDgQ3DuenQgCACXXT9OaVWQDAniwBaHaU3w4iUIIFsBhpjZwaCy54PUCZ/wsoMQBXjsri\ntQ4LQAUY9kXQ02SHxWRAV5ONg8A5kKMedVkAXA3cMFyYUhq9ydz/N4fmsLnDtWCxbirTAkhnBILx\n1LIFYEunCwAwOBnSHpO9gmYj2RZAbWUAASwAFeGKL6LlFfc02TERjFe0d0k9oAlAkSAwwBZAPRNJ\npJDJ+mxcmpECkIAQAm9emcW1i4a/eO1m+MuIAcjd+nIFQAakpUgpr6m8R2fV7rWhGLuAGpah2QgG\n1M6C3V4b0hlRtHCk0YglFRdQsToAAIhwDKAuSaUzuOMvn8N3XrkEQAmcTgSURXUmFMflmQhmI8kl\nNTReh1nbaS+HuTIFwGoywmMzLRSA2EIXUDiegsvKLqCGI5ZMYyIQ11rLyj7gY+wGWoA+F5DyHGcB\n1Se+SAIz4QR+Maj01rmU1ed/OhTHkeE5AFgy/tFbZkdQGagtZ0pXm9u6yAKYdwFlMgKhBGcBNSTD\nWRlAANDdpLiCxuZYALKJp4oLgLQA2AVUn8g2z28N+SGEwKXpyPxzoQQuq+nUG9udC35PdgTVM6Tl\n758fxK/83UsLHvOXaQEASl8iOag+lc4gnFDez7ORBCLJNISovT5AAFcCl8WfPH5C28X0t8zHAABg\nzM+ZQNlIF5DNVKgbKNcB1DNyBz0dimPUH9M+O1s7XZgOxWEyEDrc1iWbBG9WPyBvgVGLl2fC+Moz\n55BIZ5DOCBjV8YyVEIB2lxWnxpVagGBs/v05G05ofYBqrRU0wBbAsokl03jk5Ut4/swUDASsa1V2\nLR67CXazsSouoI898hr+/Mcnix+4wshimELocQFZTAZYjAaEOAuoLpnJmvZ2ZGgOF6fD6HBbMdCi\nzP0dmo3knNIlBcCXFQj+8k9O40PfOrTguC/++JQ2lD3bipQB5KYyXECtLgum1VqF7Glhs5EkQuo0\nMHYBNRAy1fOP7t2GH/z2LWhTm1cREbq9tqpYACfHAjhwamLFz1OIKzMR7PjC0zh8yVfwOM0CKNIs\ny2k1sgVQp0gXkNFAmgBsaHNq7pUhXxT9Obp0bu10w2Qg/PD1Ye2xN67M4qgaMwCAyUAMB05NYF2r\nIiALBKBCLqBALIV4Kr1gWthcJKFZBLXoAmIBWCajarHXtf3N2Lt+YW/xniY7RqsQAwjGUrg0E8FM\naPXm6L52yYdEKoOfny08vnPeAij8lnNaTZwFVKdMh+KwmAzY1duEA6cmcGY8qAmALxzHmD+a0wLo\na3bgN25eh+8fuoKzE0ox1pg/irlIEgm1wPCcmqN/5xZlimB2vMAfTcJmNsBaIAW5GHKDNxNKaBZA\nm8sCXzihVa6zBdBAjKgC0ONd2iK2GsVgmYzQdjlvDc0VOXrlOK42yXrzSuFriOkIAgPcErqemQrF\n0e6y4tp+L85PhdFkN+PDt65Hm8uCjAAyAujP06jt9+7eApfVhL/56VlkMgITfjV9VHUrySItmUEU\nii20AMrZ/QPQuoLOhBJaBtBAiwNz2S4gtgAaB7nD72paKgA9TTZMBmO6fOPLJdtPnm/xzTXTNJMR\n+Mefn9csmHI5oTbJemtormCa3nwQuJgLaO3PBQ7FU/jgPx3Ez1bZ/VZrTIcSaHNZ8NHbNuDT916F\np/7bHdje7UGbe749c19L7kEtzU4L3rGjC28NzWEmnNB8/bKH0LnJINw2k5ZBlB2onYsktcliy6Ut\nqxhMWgDrWp2YiyY1lxALQAMx5lcmC+UyK7u9dmQEMBFcOddM9hv8DbV/SjYjc1Fs//xTC/ykgBI3\n+NJPTuOJo+VP5MxkBE6NBuB1mBGKp7S+LrmQLqBChWBAbcwF/l9PncbL52fwoo5Zscw808E42lxW\nDLQ68Il9m+BWe+dI9wown06di43tTowHYgveZ1IABidD2Nzh0l4zqFqR6YyoiAXQrl7jVCiuLfjr\nWh1IZwRG1XgfC0ADMTIXRY83925FWgXjKxgIliZum8uCIzl236dGA4glMzgzHlzw+CvnZwDMB8bK\nYWg2gmA8hfdd3wdgvpFXLuLJNIgAa4E0UED5EK3lIPBrl3z451cuA5h3AzL6mAnH0epauhOXAmAy\nkFZHk4v1aqadfA8D2QIQxuZ2lzbUPRhL4t9fH8aNf3EAF6bD2lyB5SKvW1oABoI2V+D4SABmI3EM\noJEYnYuiJ4f7B5ivBVjJQLAMct25pR3hRBqnxxf2K5eL0+Iuiq9cUD48AR1FNcWQ7p9f3t2DJru5\nYBwglsrAajIUnZjkXOOD4X98ZBROixE3b2zByCwLgF4yGYGZUGLBbl8id9c9XruWu5+L9W3KgrtY\nAPyRJKZDcdUCUIsJYymcHgtgJpzAVDBetgXgsJjgsBgxHVRiAG6bGS1O5TWfPzOJWze1wWysveW0\nrCsmohYieoaIzqn/5hyES0SXiOgYEb1FRIfLOedaQAiBMX8srwXQ7ZUWwAoKgLpIvmOHMoXs5cEZ\njM5F8RvffBWTgZgmANm506l0BocuKumagQpYACdG/TAaCNu63NjT7y0YjC42EF6y1oPAE4E4epvt\n2Nzh0kx/pjj+aBKpjMgpAB67CRajQSumzIe0AN4cmoXFZFBm94biGJxSrNzNHS7YzUYYDYRgLAVf\nJAGHxQizkdDVVHgMpB7aXFbMhOMIxFLw2E3auMpURuDeXV1lv/5qUK7N8hkAPxNCfJmIPqP+/Ok8\nx94lhKgLp6k/mkQkkc4rAG6rCU6LcUUXCBkD2NLpwuYOF14cnEYonsJLg9N4+fyMtjvNnqR0fDSg\nLa6BWPmL7OmxIDa3u2AzG7Gp3YnXLvryzvONJdNFA8DA2p8LPBGModNjQ4/XjrlIEuF4qiYrQKuN\nrALODvhKiAhbOl24ute75LlsnFYTOj1WTATiWNdqh9lowHQormUAbe5wgYi0TYQvnMCmdhe++oFr\n0ZHjvKXS5rJgOhSH3WxUhsaoAkAE7FfHwdYa5b5zHwCwT/3+OwCeR34BqBvk7ro3RwooIIvB7Cva\nD0i6gFxWM27f3IZHX7uCy2pp/bnJIIbVa5wNz+/0D6run62drorEAEbmohhQC2/6mx2IJtPwhRNo\nzbHLiyUzRWsAgIVzgfVYDNVmMhDHho1O9Hqlmy+KLZ3uVb6qtc3PTk0gmVZiVG3O3Nk4P/zErTAV\ncP9I1rc6MRGIo8tjA5HiAhqcDMFiMmg+eZfVhEAsidlwAs1OCza0OYu8qj7aXFZcnomgyW5eIAA3\nrGvRWkbXGuU6rTqFEDKdZBxAPhkUAA4Q0etE9FCZ51x1pG+/UMCqu8m2oqMhZRDYbTPh9s1tiCUz\nWjOtcxMhzQLIdgG9eWUWG9qc2NTuWrYLaDIY0wrPxvwxrfupLOAZyuMXL8UFBKzNhnAZtc13p8em\nCQAHggszE4rjY985jM/8x1EAuS0AQKkPMenwocs0zx6vHe1uG6aCcbxxZQ47ezxa/MBtMyEUS2Em\nnEBrHsFZDj1eO4ZmI5gIxuCxm+C2mXBNvxe/fvNAxc5RbYr+jxPRASI6nuPrgezjhJJ0ni8R/HYh\nxDUA7gPwSSK6s8D5HiKiw0R0eGqqcHXpanFBTUPL5wICsOKjIYOxFAykpE3evKkVJgPBbCTcvLEF\nJ0YDmsmd7QI6ORbAjm4PPDbzsoPAn/zeG/ijfz+KSCIFfzSpZTxJ/+2QL5Lz92KpDKw6BMC5hmcC\nzEYSSKYFOt1W9DavfKC/HpA9sWQyQq4YQCnIOEB3kw3tLivG/DEcHZ7DTRtatWPcNhOCsZRiARRo\nHlcq9+7qQiSRxuWZCDw2MwwGwn9+8jY8cE1vxc5RbYq6gIQQ+/M9R0QTRNQthBgjom4Ak3leY0T9\nd5KIHgNwI4AX8hz7MICHAWDv3r1rZqzWz89O4buvXEJfswP/cvAytnd7Cu4uupvsmArFkUhlYCmS\n+rgc5BBq6fPct60DTqsRAy0OHLwwCACwm43aII1gLIkhXxTvv2EAc5HEslxAQgicHA2g2WnRAtzS\nApDm99DsvACM+2Nod1thNJAaAyj+/yAtgEpkKVUaObyk02NDh9sGo4EwMpdb8BgFmabptpkQS6bh\nLTMbZ73qzun22hGKpRBXW0HctHG+HYvbZsbwbAThRDpn2ulyuWlDC9a1OhQBKPM+1grlrkyPA/iw\n+v2HAfxo8QFE5CQit/wewDsBHC/zvFXn0UNX8NyZKTzy8iXctrkNjz50MwwFfJY9XhuEgDYZLJqo\n7I42EEtqRS8A8M0P78VX/us12Nzh0h7b0ePBbFgZtXdarQfY3u1Gk92MWDKj9ejXy0QgjnAijdG5\nKK6oO/0uj7ITdllNaHaYMeRTrJ5gLIl9f/0c/vPNEQD6XUDSXyt7vqwFhnwRHLrow4T6t+zwKIt/\nl8fGFkAR5Pv/H3/jevzdB64t+JnRw54+L7wOM67p82p+dwMBe9fNJyC6rCbt/VlJC4CI8Gt7+wEA\nnhocAJ+LcgXgywDeQUTnAOxXfwYR9RDRk+oxnQBeIqIjAA4BeEII8VSZ5606x0b8uHdXF47/6T14\n5MEbiuYVyx3x5ZkIToz6setPnsa5Ci5qwVhKy3mWEBG2dMwHJK/ubUJK7Rl0Us3Z39HdpO1egiVm\nAskKzIwAXr+sFH11Z9VC9Lc4MKxaANOhBGLJjGYRKAJQ/O22qd0Ju9mIo8P+kq6tGB/59iF888UL\ny/rdrz07iAe/fUgL6nd6lIWnt9m+7BiAEAKPHxnVmpnVK5Oq1XTdumbcu6u77NfrarLhrc+/E1f3\nNWn9eXb2NC3YDCnWhvL/2lLBGAAA/Op1fXBYjEVTVmuFsgRACDEjhLhbCLFFCLFfCOFTHx8VQtyv\nfn9BCLFH/dophPiLSlx4NfGFExiejWJ3b5PmdinGlk5lJ352IojDl2aRzggtM6cShHIIAKAEyYig\n5ecDiv/11FgAzQ4zOj1WbfdSLBAcTaTx1PExradQdgn+qxeUeoLsXkj9zQ5tQpqMPUhXk5IFVNwC\nMBkN2NHjwfGRyglAKp3BS+emly0qE8EYwok0XhpUYlJy59nrtS+7GOyNK3P43e+/iZ+eHF/W79cK\nk2oR1kpkdMm/w00bFnbjza7IrbQAdDXZ8Mpn78Z/qWG/fza1V7q2ChxTF6Or+5p0/067ywqvw4yz\nEyGtSreSbqBgPJmz94jNrMQBujw2rcLSF07g1FgAO3o8ICLNeikWB/iPN4fx8X95A0fUhfP8ZEjL\ntHhraA7NjoUf7L4WZUHMqP1Xss+htw4AUCyXE6OBnM3lnj8zie+9elnX60gmgnGkMkLXSMFczKij\nAJ87PYUWp0Xr/9TjtWE8EFvWrNrBScUaHK7zamIla2plUiQ3tbtwx5Y2vPu6hYtxdl9+Wa1bSZrs\n5rJdWWsFFgAdyN3orl79AkBE2NrhxtmJoOZ/r6QAKBZA7jf3vq3tuHljK5rVN/9MOI7T40Fs7/IA\nUCovgaXFYH/7zFkcODnf4fLchLLjf+mcsvM9PxXGzh4P7GYjEukMuhalwfY3O5BIZzARjGkLfyBb\nAHS4gADl/zmaTGvZVtn8y8HL+PKTp5EpYdGVu/RSXV4SmfYaTaYXFBS1uaxIL1NYZPFSvbeTmAzG\n0eHOXS9TLjazEd/92E3Y2bPwc5n9uWhx1mZ+frVgAdDB0eE5bGxzlhz42dLpwtmJIM6qAhBJVtAC\niKXyNp/60wd24f/5tT3a/NRDF2cRT2Wwo0cVgBwuoHRG4O+ePYeHvnsYjx66AkApKAOAlwaVAu7z\nUyFsbndpHRu7F/VC6muWqaBRLe1P/hsrobDralVoj+VwA/nCCQTjKVxUi970IDN1llNbIITAdHg+\nlbbTM3/P2bNq9TAZjOHXv3kQ4/4Yzk8p11+pttxrlclAvCJVuKUgLWOi8qaANQIsAAU4PxXCd16+\nhDeuzJW0+5ds63IjGEshrO78Y5V0AeWJAWQjMyCeUf3Me9cpvlL5ochOtZwJx5ERyofnjx87holA\nTNulvnF5DtOhOMb8MWzqcGnVv4tnIchisOHZyAIXUCYjkNBZBwAUDgTLtNZjJfjzy7EAQvEUEqkM\nmtXFPtudIXvMz+lMqX3l/Ax+MTiDp46PafGUei4kE0JgKhhH+wq5gPIhPxfNDkvB5nIMC0BB/vaZ\ns/jC4ydUaj0VAAAgAElEQVQwFYzjuoHCfUpykZ2RAwCRLAGIJdPLznWPp9JIpDNFLZImuxlEiuum\nw23VMhc8OWIAMl/7N29Zh4wADpyawEQgjls2tiKRzuDbv7gIQFmc10kLwLNQAOTueDIY13bF/mhS\nu0+9uzGT0YCtna6c8wV86m78yLD+KWhykV2Oq0b6/++6qgPAQgugSbMAEkt/MQfnVUF9/uyUVjBX\nzwIwF0kikc6smAsoHy5NAHj3XwwWgAKcHg/iji1t+OEnbsUHb1pX8u9vVTOBZFZONMsF9MUfn8SH\nv3UIAPDYm8P43GPHdL+u3MkWG0BhNMwHfG9Y36JlL1lNBliMhgXDraUAvG1rB5wWI76vuoE+cNMA\nLEYDvv7ceTgsRuzp92qDtxdbAC6r0jJ3KhjHXHQ+C0i+din9UpocliVZSql0RhOtUiwAGWgNxVM5\np6QVQo4c3L+9E91NNuzum98IyKImvS6gQVXQXjg7hYxQXF3BWGpNFr1Vgkn1715tF5DcGLWy/78o\nLAB5iKfSuDgdxp4+L65f17ysat5WlxWtTgsGWhxwWoyIZo06HPPHtCDr08cn8G+vD+tenLL7ABVD\nuoH2rp8vlCEieOwL20HIRbq7yYbr17fg+IiSuXR1bxM+eddmfOTW9Xjm99+G7iY7NqnFZrmmN7W7\nrZgMxrXFO56arwVoL6ENgNtm0lpeS6SrxW424sRoQPfITekCyoiFVpgepoKKkA20OPDKZ+/W2m8D\n0GIs+i2AMMxGgoxf37m1DUD9xgFkEdhqxQCaVyADqN5gAcjD4GQI6YzQcumXyy/t7sb9V3fDYTEt\nsAAiiRRCceVrLBBDIpXR3Z5BrwUAzAcqb1i/MFfaYzctOJ/crbW5rFpetcVoQH+zHb+3fwv+5F07\ntQZot2xsxfd/62bcuCj/GlA+7FPB2IJdsYwllGIBuK2mJT77WdX9c+umVkSTaS2QWgghBEbmolpq\nYKlxAGkB5OxjrwqwnhhAOiNwcTqsFUMRAbdtrnMBUIvAOjzVdQHJjRFnABWHBSAPcpTiVWUKwJ89\nsAufvvcq2C3GBbvPqFqpOO6PaaMjx3V2D5W+7HxpoNm0OCxwWoxL7sNjMy9wsUwF43BbTbBbjNrC\nvqHNmbNDIxHhlk2tOQvipAUwF1XG5gHKzhco3QIILVqspf//zq3tAJSBNMWYDiUQT2U0IS81DiBj\nALkKikxGA9w2ky4X0JAvgkQ6gzu2tGGgxYG+Zjs2tyuW1EidtpNYLReQjAFUshNovcKTLPJwZjwI\ni9GgNZ8qF7vZqA1GB6C5g0bmotoHZdwfw1Vqrn4hpGtEjwvoQ7eux/4dnUsW8ia7GXPRJMb8UbQ6\nrZgKxbUd+u6+JlhMBmzudOV6yYK0u6x4MTgNm9mIHq8dw7NRDE6FYDEatPoDPbisZkSTaSTTGW3U\nnswAkhlZenbOMsh6Vbcbhy/PLnErFWMmFIfHZsrrAvQ6zLosNxnQ3tTuwn/bvwWRRBptLissRkPd\n1gKMzkXhtBirPjDHajLi/33/NUusXmYpLAB5OD0exKYOV8XmfC61AJTvjw3PQbr+pclcCCEEnj2l\nNF3V0+nwbepueTEeuxmHL/lwx18+hz945zYlXU8VAKvJiK++/1ptBmspdHhsCMZSiCTSuHljiyIA\nkyG0u60lTfiS4haOpzRf+6zqa+/x2tDsMGuthgshF1cprKW6gKbDuefYSrx2i64YgDa1qt2F67Ma\nl3V7bXXpAookUvjx0VHcsqltVc5fyy2aqwm7gPJwZjxYtvsnG4fFuCAGIKuCs+fojgdiiKfSWkA2\nF9/6xSX878ND+O07NxYcSFMMj82EcCKNVEbg9cuzmM4SAEDpfa7HGlmMdPOkMwIDLYr15I8m8w4C\nyYc047MXbOkCanZY0NVkx4QOl5lsTre9W/lbLnYrFWMmFC8otF6HWVcM4PxUCG0uq5Y6Kulpstel\nAPzgtSHMRpL4xL6Nq30pTAEaWgAiiRT+8efnl7RF9keSGA/Eyg4AZ2MzGxe0gojkEYC/+9kg7vnK\nC3kzXP7h+fO4fXMbPn3vVWVdz/XrmrGn34s7trThxKh/gQVQDtlFPzJdFCjN/w8gZ9B2NqwM+baZ\njcrAHT0WwFwUbptJE8vlxAAKWQBNdjP8OmIAp8aC2Nyx1J3Y411+R9G1SiqdwT+9eBE3rG/G9evY\nDbOWaWgB+M7Ll/Gln5zGoYu+BY/LYe650hyXS7YFIITQvp9Wg4w9TTZMBmJ47ZIPvnBCyxnPJp0R\n8IXjuHbAW3Yzqvdc14cfffI23LmlHWP+GILxVGUEIGuxlK0hgNIygID5AHd2+wZfZH7CU1eTTRtK\nU4iR2Sh6vXbNoii1HcRMOFG2BTDuj+HYiB93bFnqjuttViyZpM6U1lpgaDaKkbko3nt932pfClOE\nhhWARCqDR15WqlsXZ3FIV0MlW8nazfMxgHgqg+yUf6vJgK1dboz5Yzg5puTfHx1amuESiCaREZW9\nruwWF6Xu0nPRkWUBtDgtmi+/VAGYdwHN/21mwwnt3rs9NsyEEwsC67kYmYuir9kOlyV3A7xCpNIZ\nzEYSBQuKZAygUHM62fL5np1LR2b3em3ICOgSs1ohrIqst4LDWJiVoWEF4MljY9qIv8VBvBlVACqZ\nRma3GLVeQIu7gnY32dDlseHMeFBzeeRqdSAHvFdSAGSDOKD0RToXrU6rlv7ptVu0OoTSLYClO3Zf\nJIlm9d471SrkYoFzaQEYDMrozFJiAL5IAkJAGzySC6/DjIwAQon8r/v0iXFsbHdic8dSl6KcK72W\n4wBTwTi+cuCsbitFbnScFs4xWes0rAA8+toVrFd91EssALX9b3OFLQDp9pFdQbvUApmuJhs6PTak\n1F1ki9OyoBHaN1+8gGPDfq0QqpJj7prsZs1XXwkBMBoIraol0eQwa60olhsDyN6xz0USWn8X2Ym0\nUO2EP5pEMJ7SprMpw8L1xwDkBLBChUzabIU8cYC5SAIHL/hwz86unM/L4jrpdlyLPHlsDF85cA4v\nn5/RdXxYFUOHtfJDYJjK0pACIITAqbEgbtvcBqfFuMSH64skQVTZhdZhMSKldsWUFoBMs+xusmt9\ndYwGwgPX9ODUWACxZBqxZBp//sQpPPralRVxTQHzbqBKCAAwv9h77VkCsNwYwKIsIPk3kQIwVmDh\nlBlAvWosQhEA/RaAbGFRKBY03w5CeQ+9emEGV2bmB8W/flmZBnfXto6cvy8tgLVcCyAb1z13elLX\n8ZG48v7WU6nOrC4NKQDToQT80SQ2d7jgdVhyxADi8NrNFW0lK3vhR5NpTQA2tCmFVooFoCyQm9td\nuHF9C1IZgVNjAVycVqpoJwKx+TTICgvA27a0o7vJVrHmWe1uK8xGgsNiXLYFYDMbYDSQtmNPpjMI\nxlKa+MlhNIV853JRlbtsl9VUUhBYDhbvLygAakM4tfndJ//1Dfz984Pa8/J8+QLJNrMRbS7Lmq4G\nlv8Pz52Z1NWvSrMALGwBrHXKEgAieh8RnSCiDBHtLXDcvUR0hogGiegz5ZxzOUQSKfzk2Jj2c3ZV\nplLJuTAG4MsKNlYKh+oPjSbSmitoo1pl3K26gABgZ48Hu/uVjpNHh/2aAIwHYvMxgAoH1963tw8v\nf+btFRO8vmY7Oty2BeMn29ylXTMRKe0g1AVUFoFJ8XNZTXBbTQVTQWV65bwFYC7JBTTki6LFaSm4\nk83uCBpLpjEdSixosifF3l5gFsJaTwUdmo2CCLg8E9Hej4WIqH8zjgGsfcq1AI4DeA+AF/IdQERG\nAF8HcB+AHQA+QEQ7yjxvSTx1fByf+N4b2ptXq8rsUARgsQUwE6q8ANgtyn91NJlGRN0h7en34iO3\nrsf+7Z3o8zpgMRpw3bpm9DTZ0Oay4sjwnDYWcSIQx2w4AZvZAHuFd1ZEVFKVbjF+/x1b8ciDNwAA\ndnR7sK3TrQlgKbiyGsLJ4rhs8SuWCjoyG4XNbNCC+S61w+if/Z+T+JeDxecKD/kiBXf/wMKOoLIw\nLRRfWu9RaDe8lovBhBAY8kVwtzoP4VkdbiA5AIljAGufsiRaCHEKQLHF40YAg0KIC+qxjwJ4AMDJ\ncs5dCnIXOeaPYkObE+enQnBYlGIir92CM4HgguN94QQ2tlemB5DEblb+qyOJlLYrdNtM+JN37dSO\nOfD7b0OPV9k57+lrWhAIng7FMRmM10SP81aXVQsE/+Yt6/Gbt6xf1usoO3blbydrNXb3zaetdjXZ\nCgaBR+ai6PHatfenx2bCuD+GR16+iNs2t+E3bi4842FoNqKNp8xHU5YFIK2RcJabSVp7hcZh9jbb\n8cK5KQghKirElWA2kkQonsItm9owEYjjr54+A7PRgA/fuj7v70QSKZgMBEuF2qgwK0c1/kK9AIay\nfh5WH6sacsGVu8jByRA2tbsUF4XDvCQNdDaSqHgrWblrjyXnXUCL3QIDrQ6tadvuPi/OT4W0wSdC\nKO0pGqnHudISWrHOnjszhY3tzgU78p4mO674IloOvhACf/30Ga1L6LCaAipxWU2IJNLIiPkCvHyk\nMwIjs9GixYAWkwFuqwnTobhmAWQLQCyZBpFS65GPHq8dkURa92CZaiIDwP3Ndvx/H9mLWza14guP\nnyg4kCccT8NhMa45MWOWUlQAiOgAER3P8fXASlwQET1ERIeJ6PDU1FRFXlMuuDJn/PxkCJvUHb7X\nrriAZHArkxGYjSQr3kpWugAiibQut8Du/iYIAZybDGmL2PmpUEUzk9Y6MgYQTaRx8MIM9m1dmElz\n08YW+MIJHFcX/EAsha89N4jHj4wCmC8Cm3+9efGcDhWuHxjzR5HKiKIuIABY1+bAhemwZgFkB5oj\niTQc5sKLofz7rsU4gAwAD7Q60OG24c//yy4AhUdyRhKpqncAZZZHUQEQQuwXQuzK8fUjnecYAdCf\n9XOf+li+8z0shNgrhNjb3p67k2WpaAIQjCEcT2HUH8NmdaqV12FGKiM0v6U/mkQ6IyqeaSN3+9FE\nWqtetRUQgD1Zowdv3tgKAEimRcVjE2sZl5q2efDCDBKpDO66auH7Yd+2DhgIOKB2R51SJ1BNBuKI\nJdPwhRPoacoWAGVRshgN8IULV+9qC58OAdjY5sKFqbAWj1jsAioWs1mLAvDiuSm8429+jiNqr6p+\ntZai12uHx2bSKtZzIS0AZu1TDRfQawC2ENEGIrIAeD+Ax6twXg1ZgTsZjOOCOkVqU7sUAGVBHZwM\n4d6vvICDF5Ril0pbAHIRUILAqgVQwC/c4rRoQ9xv2dSqPd6IFsDzZyZhNxuXTCBrcVpw3UAznj09\nAWDewpsIxLTvO7PmFsumbr+ypwfpjNAyi3Ix7FMWY7nwFWJjuxOj/iguzSjvrXBWEDiWKC4A69R6\nEJmcsBZ49YIP5yZD+M4rl9DqtGg7eiLCjh4PTo7OC8Df/PQM/uTxE9rPYbYAaoZy00DfTUTDAG4B\n8AQRPa0+3kNETwKAECIF4FMAngZwCsAPhBAn8r3mSpDtApIpoJoFoAbxfnZqAqfHg/iumh1S8Syg\nLAsgmkzDYjTknLaVjRxAvnddM8xGWpHrWsu4rEra5vNnp3DrplZYTUsX0ru3d+L4SADj/himQvMC\nIAvEurKqeO/Z2YXHfudW7NumWBKy5UcuhmYjMBoI3d7i4ww3trsgBHD40iwAIJHOIJFS2iZEEumC\nKaCAMp1tXatD14SzaiGtkWR6qRtsR3cTTo8HkFYtqJ+dnsRLg9Pa8xG2AGqGsgRACPGYEKJPCGEV\nQnQKIe5RHx8VQtyfddyTQoitQohNQoi/KPeiS0WOX5wMxjA4GYLRQFjXqsYA1B31q2qWibQAKl8H\nMB8DiCbSsJmL/9e/c0cnrupya3n1K3Fdaxm3zYRkWuDyTAT7rspdSXv3duXxn5+d1Hb9k4G4lh3U\nnWUBWEwGXDvQrFkC03nmLiTTGbw0OI1er13XQCBZz5Ht+5duoGiyuAAASjX2sZE1JACzUfS32GE0\n0BI32I4eD2LJjJZWPToXXRDADidSXANQIzTEXyma5QIanAxhXYtDG/EnKzllX37pFq70QptdCRxJ\npHTlxT9wTa822ajTY8XIXLThBECyL89ks83tLlhMhgXuk2A8pS1O2S4gSbtalDaVIxAshMDnf3Qc\nb16Zw9/82h5d17kha2xol0dJTQ3FU2h2WnTFAABgV08Tnjg6Bn8kuWRozGowMhfFjRtacN8vdS24\nP0Cp7QCAk2MB9HhtmI0kYTEatDTWSCINB7uAaoKGSNSVQddgLIUTY35sbJ+fdStdQIlUBp6sBafS\nC63VZICBpAsoU3Ixl+wV1EgxAFmBu2lR+mc2BnWHenkmsmCS2tFhPxwWo9ZULhvNAsiRCnp8JIDv\nHxrCJ/Ztwnuu09fP3mk1aa6mTerQF9kOIarDBQQAu3qVRfX4GnADpdIZjAdi6PXa8c6dXdjSubCL\n6eYOF8xGwsnRgFbAlkhnNFdrOJ6Ck11ANUFDCED2KMYhX1Tz/wPKbFzJe67rg9FAcKpTpyoJEWkd\nQaOJlK5FIRvZKqKxLADlb7MvTyM1yfpWB674IpgMxiGzLY8Oz6GryZYz/bLJbobJQDlTQd8cUvz4\nv1mkSGwxsnBws7q5kIHgUiwAADi+BtxAE8E40hmhNapbjMVkwJYON06OBRb0MJJuoEgivazKb6b6\nNIYAJNKayweAVgMAKK4ZuRhfO+DF7r4mtOgYtr4c7BalEEnvopCNTGfUMwi+XpDpkffuyt1KWTLQ\n4sTlmQgmAjEtu2s6lFgQAM6GiNDqsmAmFMfXnxvEt166qD13dNiPNpdlQexAD1IANnVIAci2AIov\nhs1OC3q9dhwfzZ9eWS20JnrN+WdOy0yg7BYW/qhST6NkAbEFUAs0hEzHkmkMtDgW9ADKxuswI+pP\nY1uXG5+7f3vRKtHlYrcYEFPTQEttlfu+vX3o8doLzqetN3b0ePDa5/YXbSW9rtWBaDKNSzMRvGtP\nj/Z3zicAgOIGmgjE8ZPj42h3W/HR2zcAAI4N+3F1b1PJVay7eppgMRqwVXWXLAgCW/Tts3b1enBi\nDVgAI3NqG+08FgCgxAH+/fVhvHVlviBMaYinTLtjC6A2aIi/UjSZxo5uj7YwbFoiABZMBePY2OZa\nYClUGofZpPUCKnUh9zos+KXd3St0ZWsXPXMEBtSBNumMwKZ2J2xmA2LJjBY3yUWby4rXLvkQSaQR\niqe0Bn3nJoO4p4jFkYv3Xt+H2za3aT+H4qXFAACg1+vALwb1DV1ZSRa30c6FnCT3s6zmcP5oUot9\nsAVQGzSGCyiZRo/XDpOB0OG2wmNbmGXR4jRjQ5tzRRd/QKn8jSaVYBnnSVeOdVkB4g73fGvtYgIg\nC/KEAE6PB3FiNICMAHYXaQCXC5PRgP4Wh/Z3DcdTEEKoFoC+fZYsfEsXqFCuBiNzUbQ6LQXdlNvV\nTKDpUFwTCn80oQ2D4TTQ2qAh/krRRBoOqxFtLuuSlDYA+Ox92xFP6Zt3Wg4OsxFR1QIoNQjM5Kev\n2QEDKSm87R4rOt02XJ6JaEKQCzmfoMluhj+axMnRgPYeyO44WiqyAjacSCOm1p/o/VvLhIRQLLWq\nqaDDs9GC/n9A+X/ra7ZjeDaK7d1ujKi1AGwB1BZ1bwFkMgLxVAZ2sxG/e/cW/NadG5Ycs6u3Cdev\na17xa+nx2nFhKqwIAFsAFcNiMqBbDZK3u6zoUKerFQrkygll91/dhSa7GSfHAnhraA5dHlvBGcDF\nsJoMMBlIaWKndX3V9zGTaciBEobWrASjc9EFPZTyIesBtnS6YTIQ/NGk5krjGEBtUPcCEEvNt17+\n4E0DePtVnat2Ldeva8ZMOIFgPMUuoAojB9t3eKxa1XShILDMprp5Yyt2dHvwi8FpPH18HHflqTjW\nCxHBaTUhnCUAehdDaQH4o6snAMFYEkO+qPb/WQgZB+j12pXBStGklv7KFkBtUPcCoI3kWwML7t71\n81YGu4Aqy7pWJwwEtDqtuHVTK27c0KINpcnFLRvb8Eu7u7FvWwd29HhweSaCtBD4nX2byr4WOXs4\nqu6GC3V9zca9ShaAEAKf/Nc38OzpCfzk+DgS6YyuQPhOtXaht9kOj90Mf4QtgFqj7v9KeiYyVYvN\n7S54bCYEYindgUFGHx+9bT2uG/DCaCDs39GJ/TsKW3pdTTZ8/YPXAZh3Zbzn2l5d/f+L4bQaFQsg\nUWIMQE1OkFPQqoU/msQTR8fw+qVZdHtt2NDmxLX93qK/d9e2dnzpPVfj9s1t8KqxlDAHgWuKurcA\nYnmmb60GBgNpsYa1cD31xJZON963t7/4gTm4Y2sb3ra1Hb9795aKXIviAkpnuYD0/a3leMlAlV1A\nE2oTvfFADG9emcO7r+3VVQdhMhrwgRsHYDYa4HVYMBdNzFsA7AKqCepeAErdha00UgA4BrB26HDb\n8J2P3liR3T8w7wKSi6Fe61NaAIFFFsDxET/+55OntKl1lWZSHaTT32IHEfDua0uf2NqkTtaTg5XY\nAqgN6l8AkmsnBgAAN25Qhrt47PwBqVecFqXgr1Tr06XGAIKLYgCPHxnFwy9cWLHgsGyj/fUPXofv\n/9bNyxJCmU4biadABF3tzpnVp+5XobUUAwCAG9Y349sP3oA7sqpGmfpiuS4go4HgspoQiC60AORw\nlslgXJtfUUkm1S6qmztcyw7eeh1mBGMpBGLKLAAeCF8b1L1Ma1lAa0QAiAh3besoOg2MqV1cVqPq\nAird+lSSBBbu9MdUAZgIxHL9StlMBmNwWU1lZe7I+MWYP8ruzRqi7leh2BpzATH1j1YHkCjd+vTY\nlTGYTxwdw0P/fBgAMDo3P+x+JZgMxtGho+dSIeRgpROjgQWDfJi1Td0LQHQNZQExjYHTakIqIzSf\nfSk7YrdNcQH97NQEfnpyApPBmBakncwzwrJcpgJxXU33CuG1K66p4dkofv2m0mYpMKtHuUPh30dE\nJ4goQ0R7Cxx3iYiOEdFbRHS4nHOWylpzATH1j5yGNR2Kw2QgXXOFJR6bGYFYEkOzSkvmlwdntDGl\nUggqzUQwVlb7C2C+ivmG9c34yK3rK3BVTDUo11Y7DuA9AP5Rx7F3CSGmyzxfyWhBYJ092RmmXORi\nODIXK3nj4bGbcXYyiBl1JsULZ6e051bCBSSEwGQgjs4yLYCdPR584MYB/M6+TTAYOABcK5QlAEKI\nUwDWdMQ/lkzDQICFg65MlZCtkt+4PFtyQNRjM2EmlNACyC+cU/ZMbS7LilgAsmmdbKC3XGxmI770\nnqsrdFVMtajWqigAHCCi14nooSqdE8D8QI61LFJMfbG1060Vg5WafOC2mbXFH4A2t/iafu+KxADk\na8oGekxjUVQAiOgAER3P8fVACee5XQhxDYD7AHySiO4scL6HiOgwER2emprKd5huljN/l2HKwWgg\nXDug9NIp3QU0b5T3qT35m+zKwKKJQKzi1cDSrVRuFhBTmxQVACHEfiHErhxfP9J7EiHEiPrvJIDH\nANxY4NiHhRB7hRB729vb9Z4iL9Fkes0UgTGNg9bzqWQX0PwgmLerram7m2zocNsQS2YQjFe2UZx0\nK5XrAmJqkxV3ARGRk4jc8nsA74QSPK4KsSRP32Kqz3Kb/skAssVowK2blLYhvV67tkBXOhAsX6+d\nXUANSblpoO8momEAtwB4goieVh/vIaIn1cM6AbxEREcAHALwhBDiqXLOWwo8fYtZDa7p94Ko9KZ/\nsoiqt9mOrZ1uAEC316bl6U9WuBp4aDYCh8WoTSNjGotys4Aeg+LSWfz4KID71e8vANhTznnKgV1A\nzGrgtplx66ZWbGp3lfR70gXU12zHQIsDG9uduH5dsxakrXQg+JXzM7h+XTMnSTQodS/70WQGXvvq\nDdhmGpd/+dhNJS+s0gXU3+KAyWjAs3+wD8B8h9BKpoJOBmI4NxnCr17fV7HXZGqLuk+OjyU4BsCs\nDsvZVTerPXXWL5rJ67KaYDMbMFVBC+Dl8zMAgNs2cWfaRqUBLACOATC1g9dhwSMP3qAFkSVEpLSJ\niOrPAhqcDCKREtrw9sX8YnAaTXZz3ueZ+qfuLYBIIsUxAKam2LetA27bUrel22ZCMK5/KMyf/fgU\nPvvYsZzPCSHw8vkZ3LKxFUZu3dCw1LUACCEQiKZ4+hZTF7ht5pIGxk8F45jO4zL651cuY2QuqtUa\nMI1JXa+MsWQGiXRGG1bBMLWM22ZaMi+4EL5wPKfL6NULM/izH5/E/u0deC8HgBuaurYA5GQlFgCm\nHvDYzAjF9LmAhBCYDScRTaYRTaTx1PFxfPPFCwCAHxwehsdmwt/+12u4c2eDU9cCIAdyeHL4Uxmm\n1nDbTLpdQKF4Col0BgDgiyTw6GtX8E+qAEwGYxhodeaMMzCNRUMIAFsATD1QigDMhpNZ3ycwGYhj\nOpRAOiMwFYyj3cW9f5g6F4AACwBTR7isZkSTaSTVnX0hZsLzwV9fOIHJYBzpjIAvnMB0KIF2t2Ul\nL5WpEepaADQXEAsAUwfIPkEhHVbAbCShfT8VjGuCMO6PwRdmC4BRaAgBYAuAqQekAOhxA8mRkgAw\nOBWCHCNwejyAjEDZQ+CZ+qCuBUCmwHGnQ6YekEHbgI5MoGwL4Mx4UPv+xGgAAAsAo1DXK6M/moTT\nYoSJ5wEzdYCnBAvAF07CYjTAZTPh9FhAe/ykKgBt7AJiUOcWgD+aZPcPUzdICyCowwLwheNodprR\n4rRg1D/fQfTkGFsAzDx1LQCBWJIDwEzdUEoMwBdOotlhQYtjPttnXasDIXWkJFsADFDnAsAWAFNP\naFlAOuYC+8JxtLosaHYq73+vw4xerzJk3mExwmmta+8vo5O6FoBAlC0Apn5waRaAniCwagE4FQug\nw21Fh+r2YfcPI6nrbUCALQCmjrCajLCYDDrTQONodVq0nX6H24YOjzJWkmsAGEldCwC7gJh6w6Oj\nIycKNo4AAAw0SURBVGgynUEglkKz0wKXJgBsATBLKcsFRER/RUSniegoET1GRN48x91LRGeIaJCI\nPlPOOfWSTGcQTqS5ERxTVygzAQq7gOYiyvOtTgua1SBwu8eqLfwcAGYk5cYAngGwSwixG8BZAJ9d\nfAARGQF8HcB9AHYA+AAR7SjzvEWRZnITD4Nh6gg9DeF8YaUIrNk5HwNod1nR4VZdQGwBMCplCYAQ\n4qdCCPluPAgg13SJGwEMCiEuCCESAB4F8EA559WD1gbCwRYAUz8oAlDYApAC0OK0aLv9riYberyK\nAHSpsQCGqeT2+KMA/neOx3sBDGX9PAzgpnwvQkQPAXgIAAYGBpZ9MdwHiKlH3FYzJgO5xzxKsgVg\nW6cbf/2+PXjHjk5YTUZ84zeux9u2tlfjUpkaoKgAENEBAF05nvqcEOJH6jGfA5AC8L1yL0gI8TCA\nhwFg7969YrmvE+BhMEwdossFpPYBanFYQEQLxj7euyvXR5lpVIoKgBBif6HniegjAH4ZwN1CiFwL\n9giA/qyf+9THVhS2AJh6RE8Q2BeajwEwTCHKzQK6F8AfAXiXECKS57DXAGwhog1EZAHwfgCPl3Ne\nPciOiVwIxtQTbpsJ4UQa6Ux+43g2koDbZoKZmyAyRSj3HfI1AG4AzxDRW0T0DQAgoh4iehIA1CDx\npwA8DeAUgB8IIU6Ued6ihNVyeS55Z+oJPUNhZsIJtPLun9FBWaujEGJznsdHAdyf9fOTAJ4s51yl\nEk8qY/NsJt4FMfWDTOGcDMbyZrjNhhPs/mF0UberYyyVhslAPAuAqStkQ7eRuWjeY3xsATA6qdvV\nMZbMwGY2rvZlMExF6VEFYHQulvcYXzihVQAzTCHqWADSsJnr9vaYBqXDbYXRQBjNYwEIIeCLJNDi\nYgFgilO3K2QsmYHVxBYAU1+YjAZ0eWx5BSCcSCORyiwYBMMw+ahfAUilYWULgKlDery2BTEAfySJ\nSELJCpoNcw0Ao5+6XSHjyTRsbAEwdUh3kx1jWXN+P/TtQ/jTx08CUFJAAXAQmNFF3QqAEgSu29tj\nGpgerx1j/igyGQEhBE6PBTA4FQLAFgBTGnVbJaUEgdkCYOqPXq8NybTAdCgOEBBPZTAZVCwCH1sA\nTAnUrQDEUxluA8HUJT1ZtQCyI8REIK5kALEFwJRA3QoAp4Ey9Up2LUAqo1S8J1IZ+KNJ+CIJmI0E\nN7dAYXRQt++SWIqDwEx9Mi8AUSTSGe3xiUAcvpBSBEZEq3V5TA1RvwKQzMDKMQCmDvHYTHBZTRie\njSwSgJhSBMbuH0YndesjiSXTsHIjOKYOISJs73bjjStzGPJFtYDvRCCG6VCcBYDRTd2ukHHuBcTU\nMXdsacfxUT9OjQVw7UAzAGDcH8PZ8SA2d7hW+eqYWqEuBSCdEUikuQ6AqV9u39IGIZTCr80dLjTZ\nzTh0yYdwIo2dPZ7VvjymRqjLFTKeSgMAWwBM3bK7twkedThMf4sdHW4rXr3gAwDs7GlazUtjaoi6\nFIAYD4Nh6hyT0YBbN7UBAPqaHej02JBIZ2AyELZ0sguI0UddrpBsATCNwNuv6gARsLHNiQ6PMils\nS6ebu+AyuqnLNFDNAmABYOqY917fh2sGvOhvUSwAAOz/Z0qiLAEgor8C8CsAEgDOA3hQCDGX47hL\nAIIA0gBSQoi95Zy3GLGktADq0sBhGACAwUDY2ukGAHSqs4JZAJhSKHeFfAbALiHEbgBnAXy2wLF3\nCSGuWenFH5gXAC4EYxqF3mYHAGB3HweAGf2UJQBCiJ8KIVLqjwcB9JV/SeUzHwRmAWAag7df1YFH\nHrwB16k1AQyjh0r6SD4K4Cd5nhMADhDR60T0UAXPmZNYSloA7AJiGgOjgbBvWwf3AGJKomgMgIgO\nAOjK8dTnhBA/Uo/5HIAUgO/leZnbhRAjRNQB4BkiOi2EeCHP+R4C8BAADAwM6LiFpcRlDIAtAIZh\nmLwUFQAhxP5CzxPRRwD8MoC7hRAiz2uMqP9OEtFjAG4EkFMAhBAPA3gYAPbu3Zvz9YoxnwXEFgDD\nMEw+ylohieheAH8E4F1CiEieY5xE5JbfA3gngOPlnLcY81lAbAEwDMPko9wt8tcAuKG4dd4iom8A\nABH1ENGT6jGdAF4ioiMADgF4QgjxVJnnLUg8xXUADMMwxSirDkAIsTnP46MA7le/vwBgTznnKRWu\nA2AYhilOXa6QnAbKMAxTnPoUgFQaFqMBBgOnxDEMw+SjPgUgmeYaAIZhmCLU5SoZ42lgDMMwRalL\nAYjzPGCGYZii1OUqGUul2QJgGIYpQn0KQJLnATMMwxSjLlfJeCrNKaAMwzBFqEsB4CAwwzBMcepU\nANLsAmIYhilCXa6SSh0AWwAMwzCFqFMByHAMgGEYpgh1KQDxFLuAGIZhilGXq2QsmYGVLQCGYZiC\n1KUA7N/egV29ntW+DIZhmDVNWfMA1ipfef+1q30JDMMwa566tAAYhmGY4rAAMAzDNCgsAAzDMA1K\nWQJARF8koqPqQPifElFPnuPuJaIzRDRIRJ8p55wMwzBMZSjXAvgrIcRuIcQ1AH4M4POLDyAiI4Cv\nA7gPwA4AHyCiHWWel2EYhimTsgRACBHI+tEJQOQ47EYAg0KIC0KIBIBHATxQznkZhmGY8ik7DZSI\n/gLAhwD4AdyV45BeAENZPw8DuKnc8zIMwzDlUdQCIKIDRHQ8x9cDACCE+JwQoh/A9wB8qtwLIqKH\niOgwER2empoq9+UYhmGYPBS1AIQQ+3W+1vcAPAngC4seHwHQn/Vzn/pYvvM9DOBhACCiKSK6rPP8\ni2kDML3M361V+J4bg0a8Z6Ax73s597xO74FluYCIaIsQ4pz64wMATuc47DUAW4hoA5SF//0APqjn\n9YUQ7WVc22EhxN7l/n4twvfcGDTiPQONed8rfc/lxgC+TETbAGQAXAbwcQBQ00G/KYS4XwiRIqJP\nAXgagBHAt4QQJ8o8L8MwDFMmZQmAEOJX8zw+CuD+rJ+fhOIeYhiGYdYI9VwJ/PBqX8AqwPfcGDTi\nPQONed8res8kRK7UfYZhGKbeqWcLgGEYhilATQtAsR5DpPBV9fmjRHTdalxnpdFx37+u3u8xInqZ\niPasxnVWEr39pIjoBiJKEdF7q3l9K4GeeyaifWovrhNE9PNqX2Ol0fHebiKi/0NER9R7fnA1rrOS\nENG3iGiSiI7neX7l1jEhRE1+QckoOg9gIwALgCMAdiw65n4APwFAAG4G8OpqX3eV7vtWAM3q9/fV\n+n3ruees456FknDw3tW+7ir8nb0ATgIYUH/uWO3rrsI9/zGAv1S/bwfgA2BZ7Wsv877vBHAdgON5\nnl+xdayWLQA9PYYeAPDPQuEgAC8RdVf7QitM0fsWQrwshJhVfzwIpfiultHbT+r/AvBDAJPVvLgV\nQs89fxDAfwghrgCAEKLW71vPPQsAbiIiAC4oApCq7mVWFiHEC1DuIx8rto7VsgDk6jHUu4xjao1S\n7+ljUHYPtUzReyaiXgDvBvAPVbyulUTP33krgGYiep6IXieiD1Xt6lYGPff8NQDbAYwCOAbg94QQ\nmepc3qqxYutYXc4EZhSI6C4oAnD7al9LFfgKgE8LITLK5rAhMAG4HsDdAOwAXiGig0KIs6t7WSvK\nPQDeAvB2AJsAPENEL4qFnYkZndSyAOjpMVRSH6IaQdc9EdFuAN8EcJ8QYqZK17ZS6LnnvQAeVRf/\nNgD3E1FKCPGf1bnEiqPnnocBzAghwgDCRPQCgD0AalUA9NzzgwC+LBTn+CARXQRwFYBD1bnEVWHF\n1rFadgFpPYaIyAKlx9Dji455HMCH1Cj6zQD8Qoixal9ohSl630Q0AOA/APxmnewGi96zEGKDEGK9\nEGI9gH8H8Ds1vPgD+t7fPwJwOxGZiMgBpc36qSpfZyXRc89XoFg8IKJOANsAXKjqVVafFVvHatYC\nEHl6DBHRx9XnvwElG+R+AIMAIlB2DzWNzvv+PIBWAH+v7ohTooabaOm857pCzz0LIU4R0VMAjkLp\nx/VNIUTOVMJaQOff+YsAHiGiY1CyYj4thKjpDqFE9H0A+wC0EdEwlI7KZmDl1zGuBGYYhmlQatkF\nxDAMw5QBCwDDMEyDwgLAMAzToLAAMAzDNCgsAAzDMA0KCwDDMEyDwgLAMAzToLAAMAzDNCj/P3Bw\ne39BpO9BAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1167b9110>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(bipolar_eeg.time,bipolar_eeg.sel(events=bipolar_eeg.events.data['type']=='WORD').mean('bipolar_pairs').mean('events'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This data seems like it's heavily contaminated by 60 Hz line noise. We can use the `filtered` method to filter out the 60 Hz component of the signal:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x116b1cbd0>]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1158ac550>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(bipolar_eeg.time,bipolar_eeg.filtered([58.,62.]).mean('bipolar_pairs').mean('events'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. RAM data (new)\n",
    "\n",
    "The new system for storing the RAM data stores the information about each subject's electrode montage in a file `pairs.json`,\n",
    "which we can find using a JsonIndexReader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from ptsa.data.readers.IndexReader import JsonIndexReader\n",
    "jr = JsonIndexReader(rhino_root+'/protocols/r1.json')\n",
    "events = np.concatenate(\n",
    "    [BaseEventReader(filename=f).read() for f in jr.aggregate_values('task_events',subject='R1111M',experiment='FR1')]\n",
    ").view(np.recarray)\n",
    "words = events[events.type=='WORD']\n",
    "pairs_path = jr.get_value('pairs',subject='R1111M',experiment='FR1')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once we have this path, we can create a TalReader object with it, and use that to load the list of channels and the list of bipolar pairs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Coordinates:\n",
       "  * channels    (channels) |S3 '001' '002' '003' '004' '005' '006' '007' ...\n",
       "    samplerate  float64 500.0\n",
       "  * events      (events) (numpy.record, [('session', '<i8'), ('eegoffset', '<i8'), ('protocol', 'S256'), ('intrusion', '<i8'), ('item_name', 'S256'), ('serialpos', '<i8'), ('rectime', '<i8'), ('stim_params', '<f8', (0,)), ('list', '<i8'), ('subject', 'S256'), ('eegfile', 'S256'), ('montage', 'S256'), ('experiment', 'S256'), ('recalled', '<i8'), ('msoffset', '<i8'), ('stim_list', '<i8'), ('item_num', '<i8'), ('mstime', '<i8'), ('is_stim', '<i8'), ('type', 'S256'), ('exp_version', 'S256')]) (2, 183362, 'r1', -999, 'JUICE', 1, -999, array([], dtype=float64), 1, 'R1111M', '/Volumes/rhino_root/protocols/r1/subjects/R1111M/experiments/FR1/sessions/2/ephys/current_processed/noreref/R1111M_FR1_2_26Jan16_1408', '0.0', 'FR1', 0, 1, 0, 138, 1453836066458, 0, 'WORD', '1.05') ...\n",
       "  * time        (time) float64 0.0 0.002 0.004 0.006 0.008 0.01 0.012 0.014 ..."
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tal_reader = TalReader(filename=pairs_path)\n",
    "channels = tal_reader.get_monopolar_channels()\n",
    "eeg = EEGReader(events=words,channels=channels,start_time=0.0,end_time=1.0).read()\n",
    "eeg.coords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coordinates:\n",
      "  * bipolar_pairs  (bipolar_pairs) (numpy.record, [('ch0', 'S3'), ('ch1', 'S3')]) ('001', '002') ...\n",
      "    samplerate     float64 500.0\n",
      "  * events         (events) (numpy.record, [('session', '<i8'), ('eegoffset', '<i8'), ('protocol', 'S256'), ('intrusion', '<i8'), ('item_name', 'S256'), ('serialpos', '<i8'), ('rectime', '<i8'), ('stim_params', '<f8', (0,)), ('list', '<i8'), ('subject', 'S256'), ('eegfile', 'S256'), ('montage', 'S256'), ('experiment', 'S256'), ('recalled', '<i8'), ('msoffset', '<i8'), ('stim_list', '<i8'), ('item_num', '<i8'), ('mstime', '<i8'), ('is_stim', '<i8'), ('type', 'S256'), ('exp_version', 'S256')]) (2, 183362, 'r1', -999, 'JUICE', 1, -999, array([], dtype=float64), 1, 'R1111M', '/Volumes/rhino_root/protocols/r1/subjects/R1111M/experiments/FR1/sessions/2/ephys/current_processed/noreref/R1111M_FR1_2_26Jan16_1408', '0.0', 'FR1', 0, 1, 0, 138, 1453836066458, 0, 'WORD', '1.05') ...\n",
      "  * time           (time) float64 0.0 0.002 0.004 0.006 0.008 0.01 0.012 ...\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1167ecd10>]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1166564d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bipolar_eeg= MonopolarToBipolarMapper(time_series=eeg,bipolar_pairs=tal_reader.get_bipolar_pairs()).filter()\n",
    "print(bipolar_eeg.coords)\n",
    "plt.plot(bipolar_eeg.time,bipolar_eeg.mean('bipolar_pairs').mean('events'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. LTPFR/LTPFR2\n",
    "There are two main differences between reading scalp data and reading ECoG data. The first is that scalp data are usually rereferenced so that the data are relative to the average over all electrodes. This helps to eliminate artifacts due to muscle movement. To load the referenced data, we pass set the parameter `use_reref_eeg` to `True` when reading the events."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "events = BaseEventReader(filename=rhino_root+'/data/eeg/scalp/ltp/ltpFR2/behavioral/events/events_all_LTP093.mat',\n",
    "                         use_reref_eeg=True,common_root='data').read()\n",
    "words = events[events.type=='WORD']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The second difference between reading scalp EEG data and ECoG data is that the scalp experiments have a fixed set of electrodes. \n",
    "We therefore construct the array of channel labels ourselves, rather than reading it with a TalReader.\n",
    "\n",
    "The scalp EEG in the CML lab has 128 channels, but for purposes of speed we'll only load a few of them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['020', '021', '022', '023', '024', '025', '026', '027', '028', '029'], \n",
       "      dtype='|S3')"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "channels = np.array(['{:03}'.format(x) for x in range(20,30)])\n",
    "channels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "eeg = EEGReader(events=words,channels=channels,start_time=0.0,end_time=1.0).read()\n",
    "plt.plot(eeg.mean('events').mean('channels'))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2.0
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
